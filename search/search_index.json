{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Material for MkDocs","text":"<p>Welcome to Material for MkDocs.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"cybersecurity/cybersecurity/","title":"Cybersecurity","text":"<p>This is the section on computer security. This is where all the knowledge I've acquired over the years on this topic is located.</p> <p>The content can be summarized as follows:</p>"},{"location":"cybersecurity/cybersecurity/#tools","title":"Tools","text":"<ul> <li> Burpsuite</li> <li> Nmap</li> <li> Wordlists</li> <li> Wfuzz</li> <li> Gobuster</li> </ul>"},{"location":"cybersecurity/cybersecurity/#techniques","title":"Techniques","text":"Enumeration <p> <ul> <li> Web Services </li> <li> CMS </li> <li> Ports </li> <li> OS </li> <li> RPCbin </li> <li> SSH </li> </ul> <ul> <li> Security Breaches </li> <li> Emails </li> <li> FTP </li> <li> Local Network </li> <li> SMB </li> <li> Technologies </li> </ul> </p> OSINT <p> <ul> <li> Google Dorks </li> </ul> <ul> <li> Images </li> </ul> </p>"},{"location":"cybersecurity/hacking/enumeration/cms/","title":"CMS Enumeration:","text":"<p>Content Management Systems (CMS) like WordPress, Joomla, Drupal, and Magento power millions of websites worldwide. However, their popularity also makes them prime targets for cyberattacks. Enumeration\u2014identifying versions, plugins, and configurations\u2014is a critical step in securing these systems. Here\u2019s how to enumerate some of the most popular CMS platforms.</p>"},{"location":"cybersecurity/hacking/enumeration/cms/#wordpress","title":"WordPress","text":"<p>WordPress is the most widely used CMS, known for its flexibility and ease of use. Below are some techniques to enumerate a WordPress site:</p> <pre><code>whatweb DOMAIN_OR_IP\n\ncurl -s -X GET \"DOMAIN\" | grep \"plugins\"    # Lists installed plugins\ncurl -s -X POST \"DOMAIN\" -d@file.xml       # Tests for XML-RPC vulnerabilities\n\nwpscan --url DOMAIN -e vp --api-token=\"YOUR_API_TOKEN\"  # Checks for vulnerable plugins\nwpscan --url DOMAIN -U username -P wordlist.txt\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/cms/#joomla","title":"Joomla","text":"<p>Joomla is another popular CMS, especially for enterprise and government websites. To enumerate a Joomla site:</p> <pre><code>perl joomscan.pl -u http://DOMAIN\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/cms/#drupal","title":"Drupal","text":"<p>Drupal is favored for its scalability and customization. Here\u2019s how to enumerate it:</p> <pre><code>whatweb DOMAIN\ndroopescan scan drupal --url DOMAIN\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/cms/#magento","title":"Magento","text":"<p>Magento is a leading e-commerce platform. To enumerate it:</p> <pre><code>magescan scan:all DOMAIN\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/emails/","title":"Email Enumeration: Tools and Techniques","text":"<p>Email enumeration is a critical step in cybersecurity assessments, helping identify valid email addresses associated with a domain. Below are some powerful tools and techniques for email enumeration:</p>"},{"location":"cybersecurity/hacking/enumeration/emails/#online-tools","title":"Online Tools","text":"<ol> <li>Hunter - Discover email addresses associated with a domain.</li> <li>Intelligence X - Search for leaked emails and data breaches.</li> <li>Phonebook.cz - Find email addresses linked to domains or individuals.</li> <li>Clearbit Connect - A Chrome extension for finding professional emails.</li> <li>verifyEmailAddress - Verify if an email address exists.</li> <li>Email Checker - Validate email addresses in bulk.</li> </ol>"},{"location":"cybersecurity/hacking/enumeration/emails/#command-line-tools","title":"Command-Line Tools","text":"<ul> <li>PhoneInfoga - Advanced OSINT tool for email reconnaissance.</li> <li>Epieos - Investigate email metadata and ownership.</li> <li>Mr. Holmes - Automate email discovery and validation.</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/ftp/","title":"FTP","text":"<p>FTP is a widely used protocol for file transfer over networks. FTP service enumeration involves collecting relevant information, such as FTP server version, file permission settings, users and passwords (using brute force or guessing attacks), among others.</p> <ul> <li> <p>identify version <pre><code>nmap --script ftp-anon -p21 IP\nnmap -sCV  -p21 IP\n</code></pre></p> </li> <li> <p>connect by password <pre><code>ftp IP\nftp domain.com\nftp user@ftpdomain.com\n# if anonymous is ability the name is anonymous and pasword is enter\n# next add name\n# add password\n</code></pre></p> </li> <li> <p>force brute <pre><code>ncrack -U userlist -P passlist ftp://10.10.10.10 -v\nhydra -l user -P passwordlist ftp://IP\n</code></pre></p> </li> </ul>"},{"location":"cybersecurity/hacking/enumeration/localNetwork/","title":"Local Network","text":"<p>Discovering active hosts on a local network is a critical step for network administrators and cybersecurity professionals. Whether for troubleshooting, inventory management, or security assessments, host discovery helps identify devices and services running on your network.</p>"},{"location":"cybersecurity/hacking/enumeration/localNetwork/#why-host-discovery-matters","title":"Why Host Discovery Matters","text":"<ul> <li>Network Management: Maintain an up-to-date inventory of connected devices.</li> <li>Security Audits: Identify unauthorized or vulnerable devices.</li> <li>Troubleshooting: Quickly locate connectivity issues.</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/localNetwork/#basic-commands","title":"Basic Commands","text":"<pre><code>ifconfig                   # List network interfaces and IP addresses\nhostname -I                # Display the local IP address\nroute -n                   # Show routing table (including gateway)\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/localNetwork/#active-scanning","title":"Active Scanning","text":"<pre><code>nmap -sn 192.168.1.0/24    # Ping sweep to discover live hosts\narp-scan -l --interface=ens33  # ARP-based discovery for local devices\nping -c 1 192.168.1.1      # Test connectivity to a specific host\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/localNetwork/#advanced-techniques","title":"Advanced Techniques","text":"<pre><code>echo \"\" &gt; /dev/tcp/192.168.1.1/80  # Check if a port is open (bash)\nmasscan -p22,80 192.168.1.0/24 --rate=10000  # High-speed port scanning\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/os/","title":"OS","text":""},{"location":"cybersecurity/hacking/enumeration/os/#concept","title":"Concept","text":"<p>Time-to-live (TTL) refers to the amount of time or \"hops\" that a packet is configured to exist within a network before being discarded by a router. TTL is also used in other contexts, such as CDN caching and DNS caching.</p> <p>Well, it turns out that different operating systems have different default TTLs. For example, on Windows operating systems, the default TTL value is 128, while on Linux operating systems it is 64.</p> <p>Subin\u2019s Blog for search TTL</p> <p>Note</p> <p>on Windows servers is not case sensitive</p>"},{"location":"cybersecurity/hacking/enumeration/os/#commands","title":"commands","text":"<pre><code>nslookup  google.com              # dns\nwhois 10.10.10.10                 # public information\nping -c 1 IP                      # sent a ping for show information of TTL\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/os/#docs","title":"Docs","text":"<pre><code>https://ping.eu/nslookup/         # nslookup online\nhttps://ping.eu/ping/             # ping information\nhttps://en.ipshu.com              # nslookup online\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/ports/","title":"Port Enumeration: Tools and Techniques","text":"<p>Port enumeration is a fundamental step in cybersecurity assessments, helping identify open ports and services running on a target system. Below are some powerful tools and techniques for port enumeration:</p>"},{"location":"cybersecurity/hacking/enumeration/ports/#online-tools","title":"Online Tools","text":"<ol> <li>Shodan - Search for devices and open ports connected to the internet.</li> <li>Censys - Discover and analyze hosts, services, and certificates.</li> <li>Nmap - The gold standard for network scanning and port enumeration.</li> <li>Masscan - High-speed port scanner for large networks.</li> <li>Zenmap - GUI for Nmap, making scans more accessible.</li> </ol>"},{"location":"cybersecurity/hacking/enumeration/ports/#command-line-tools","title":"Command-Line Tools","text":"<ul> <li>Nmap - Versatile and powerful for detailed port scanning.</li> <li>Masscan - Ideal for scanning large networks quickly.</li> <li>RustScan - Modern, fast port scanner with advanced features.</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/rpcbin/","title":"RPCbin","text":"<p>Provides information between Unix based systems. Port is often probed, it can be used to fingerprint the Nix OS, and to obtain information about available services. Port used with NFS, NIS, or any rpc-based service.</p>"},{"location":"cybersecurity/hacking/enumeration/rpcbin/#enumeration","title":"enumeration","text":"<pre><code>nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount IP\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/securityBreaches/","title":"Security Breaches","text":"<p>Information security is a critical issue in today's digital world, especially when it comes to sensitive data such as passwords, financial or identity information. Cyber attacks are a constant threat to any business or organization, and one of the main techniques used by attackers is the exploitation of credentials and security breaches.</p> <p>It is important to understand that many of these databases leaked and sold online are publicly accessible and in some cases, even sold for a small amount of money. This means that anyone can access this information and use it to carry out malicious attacks.</p>"},{"location":"cybersecurity/hacking/enumeration/securityBreaches/#tools","title":"Tools","text":"<ul> <li>DeHashed</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/smb/","title":"SMB","text":"<p>SMB stands for Server Message Block, it is a network communication protocol used to share files, printers and other resources between network devices. It is a Microsoft proprietary protocol used in Windows operating systems.</p> <p>Samba, on the other hand, is a free and open source implementation of the SMB protocol, which is mainly used on Unix and Linux based operating systems. Samba provides a way to share files and resources between network devices running different operating systems, such as Windows and Linux.</p> <ul> <li> <p>enumeration <pre><code>nmap -p 443,445 --script= smb-enum-shares.nse,smb-enum-users.nse IP\n</code></pre></p> </li> <li> <p>list the shared resource at the system level in the work <pre><code>enum4linux IP                  # enumeration general\nsmbmap -H IP                    # show the permission\nsmbclient -L IP -N                # -N is null session because not have credentials\n</code></pre></p> </li> <li> <p>connected at smb <pre><code>smbclient //IP/folder -N           # folder have permissions\nsmbmap -H IP -u 'admin' -p 'password'\n</code></pre></p> </li> <li> <p>uploads files <pre><code>smbget -R smb://IP/folder\ndir                # list the content\nput file.txt        # upload\nget file.txt        # download\ndel file.txt        # delete\n</code></pre></p> </li> <li> <p>create mount for multiples files or folders in SMB <pre><code>mount -t cifs //IP/folder  /mydirectory -o username=null,password=null,domain=,rw # rw is for mount with read and write capacity\n</code></pre></p> </li> <li>dismount the files <pre><code>umount mountname\nrm -rf mountname\n</code></pre></li> </ul> <p> </p> <p>tool crackmapexec expert in SMB only for Windows machine</p>"},{"location":"cybersecurity/hacking/enumeration/ssh/","title":"SSH","text":""},{"location":"cybersecurity/hacking/enumeration/ssh/#concept","title":"Concept","text":"<p>SSH is a SSH (Secure Shell) remote administration protocol that allows users to control and modify their remote servers over the Internet using a secure authentication mechanism. As a more secure alternative to the Telnet protocol, which transmits unencrypted information, SSH uses cryptographic techniques to ensure that all communications to and from the remote server are encrypted.</p> <p>SSH provides a mechanism to authenticate a remote user, transfer input from the client to the host and relay the output back to the client. This is especially useful for administering remote systems securely and efficiently, without having to be physically present at the site.</p> <ul> <li> <p>identify version <pre><code>nmap -sCV -p22 IP        # show the OS version also\n</code></pre></p> </li> <li> <p>connect <pre><code>ssh user@IP -p 22\n# next enter the password\n</code></pre></p> </li> <li> <p>force brute <pre><code>hydra -l user -P passwordlist ssh://IP -s 22 -t 15   # -s port , -t task paralleled\n</code></pre></p> </li> </ul>"},{"location":"cybersecurity/hacking/enumeration/technologies/","title":"Technologies","text":"<p>Understanding the technologies behind a target website is crucial for security assessments. This process, known as technology enumeration, helps identify: - Web frameworks (e.g., WordPress, Django) - Server software (e.g., Apache, Nginx) - Security protocols (e.g., SSL/TLS versions) - Vulnerable components</p>"},{"location":"cybersecurity/hacking/enumeration/technologies/#tools-for-technology-enumeration","title":"Tools for Technology Enumeration","text":""},{"location":"cybersecurity/hacking/enumeration/technologies/#1-web-technology-detectors","title":"1. Web Technology Detectors","text":"<ul> <li>WhatWeb: Command-line tool to identify websites, CMS, and frameworks.   <pre><code>whatweb https://target.com\n</code></pre></li> <li>Wappalyzer: Browser extension for real-time tech detection.</li> <li>BuiltWith: Comprehensive profile of a site's technology stack.</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/technologies/#2-ssltls-analysis","title":"2. SSL/TLS Analysis","text":"<p>HTTPS (Port 443) encrypts data using SSL/TLS. Test configurations with: <pre><code>openssl s_client -connect target.com:443  # Inspect certificates\nsslscan target.com                         # Check for weak ciphers\nnmap -sV --script ssl-enum-ciphers -p443 target.com  # Enumerate SSL/TLS settings\n</code></pre></p>"},{"location":"cybersecurity/hacking/enumeration/technologies/#3-network-level-enumeration","title":"3. Network-Level Enumeration","text":"<pre><code>nmap -sCV -p80,443 target.com  # Scan for open ports and services\nnc --ssl target.com 443        # Manual encrypted connection test\n</code></pre>"},{"location":"cybersecurity/hacking/enumeration/webServices/","title":"Subdomain Enumeration","text":"<p>Subdomains are extensions of the primary domain, allowing the creation of independent sections within the same website. They function as distinct addresses, ideal for separating services like blogs, stores, or administrative panels. Subdomain enumeration is a critical step in cybersecurity for identifying subdomains linked to a main domain. Subdomains are part of a larger domain and often point to various network resources, such as web servers, email servers, database systems, and content management systems. This guide will walk you through manual and automated techniques for subdomain enumeration, along with popular tools and best practices.</p>"},{"location":"cybersecurity/hacking/enumeration/webServices/#manual-enumeration","title":"Manual Enumeration","text":"<p>Manual enumeration involves exploring the web application by clicking on links and observing redirects to discover subdomains. While simple, this method is effective for uncovering less common or hidden subdomains that automated tools might miss.</p>"},{"location":"cybersecurity/hacking/enumeration/webServices/#passive-enumeration-techniques","title":"Passive Enumeration Techniques","text":"<p>Passive enumeration gathers subdomain information without direct interaction with the target, reducing the risk of detection. Below are some widely used tools for passive subdomain enumeration:</p> <ul> <li> <p>DNSDumpster</p> </li> <li> <p>sd-goo <pre><code>./sd-goo.sh -d [domain] -c \"[cookie]\"   # cookie of the petition to google.com\n./sd-goo.sh -d example.com -c \"Cookie: EOU=one.....\" | tee output.txt\n</code></pre></p> </li> <li> <p>Google Dorking <pre><code>site:*.example.com -site:www.example.com  # use - for exclude this site\nmicrosoft.com -www -docs -infraestructuremap\n</code></pre></p> </li> <li> <p>virustotal</p> </li> <li> <p>ctfr  Abusing Certificate Transparency logs for getting HTTPS websites subdomains. <pre><code>python3 ctfr.py -d example.com\n</code></pre></p> </li> <li> <p>sublist3r using many search engines. for enumerate subdomains using netcraft, virustotal,threatcrowd, dnsdumpster and reversdns <pre><code>python sublist3r.py  -v -d example.com\n</code></pre></p> </li> <li> <p>crt.sh</p> </li> <li>censys</li> <li>netcraft</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/webServices/#active-enumeration","title":"Active Enumeration","text":"<p>Active enumeration involves directly querying the target to discover subdomains. Below are some commonly used tools: - Gobuster <pre><code>gobuster vhost -u http://test.com -w wordlist -t 20\n</code></pre> - wfuzz <pre><code>wfuzz -c -t 20 --hc=403 -w wordlist  -H \"Host:FUZZ.TARGET\"\n</code></pre></p> <ul> <li>ffuf <pre><code>ffuf -w &lt;Wordlist&gt; -H \"Host: FUZZ.acmeitsupport.thm\" -u &lt;IP&gt;\n</code></pre></li> <li>amass</li> <li>reconftw</li> <li>dnsrecon</li> <li>hakrawler</li> </ul>"},{"location":"cybersecurity/hacking/enumeration/webServices/#directory-enumeration","title":"Directory Enumeration","text":"<p>Directory enumeration involves discovering hidden paths and resources on a web server. Tools like Wfuzz and Gobuster use fuzzing techniques to perform brute-force attacks, identifying resources that could be exploited by attackers.</p> <p> </p> <p>only when the web slow to responde</p>"},{"location":"cybersecurity/hacking/enumeration/webServices/#gobuster","title":"Gobuster","text":"<pre><code>gobuster dir -u target -w wordlist -t 200\ngobuster --add-slash                     # add a slash for that not exist redirect\ngobuster -b 403                          # hide the state code 403\ngobuster -x php,html                     # search files php, html\ngobuster -s 200 -b ''                    # show the state 200\n</code></pre> <ul> <li> <p>Gobuster</p> </li> <li> <p>Wfuzz: https://github.com/xmendez/wfuzz</p> </li> </ul>"},{"location":"cybersecurity/hacking/enumeration/webServices/#other-tools","title":"other tools","text":"<p>FUFF: this is one more faster and usage when the web slow response <pre><code>fuff -c -v -w path -u target/fuff\n</code></pre></p> <p>phonebook</p>"},{"location":"cybersecurity/hacking/osint/googleDorks/","title":"Google Dorks","text":"<p>Google Dorking is an advanced search technique that leverages specific operators and keywords in Google to uncover information not typically visible in standard search results. While powerful for cybersecurity professionals and ethical hackers, it must be used responsibly to avoid misuse.</p> <p>Google Dorking involves using specialized search queries to find sensitive or hidden information, such as: - Exposed databases - Unsecured files (PDFs, spreadsheets) - Login portals - Configuration files</p>"},{"location":"cybersecurity/hacking/osint/googleDorks/#key-operators","title":"Key Operators","text":"<pre><code>site:example.com       # Restrict results to a specific domain\ninurl:admin            # Find URLs containing \"admin\"\nintitle:\"index of\"     # Locate directory listings\nfiletype:pdf           # Filter by file type (e.g., PDFs)\next:conf               # Find configuration files\n</code></pre>"},{"location":"cybersecurity/hacking/osint/googleDorks/#tools-to-enhance-dorking","title":"Tools to Enhance Dorking","text":"<ol> <li>Shodan - Scan for exposed devices and services.</li> <li>DNSDumpster - Map subdomains and network infrastructure.</li> <li>Exploit Database - Find vulnerabilities tied to dorking results.</li> <li>Archive.org - Access historical snapshots of websites.</li> </ol>"},{"location":"cybersecurity/hacking/osint/images/","title":"Images","text":""},{"location":"cybersecurity/hacking/osint/images/#concept","title":"concept","text":"<p>We will explore how image recognition technologies can be used to gain valuable information about people and places, and data of images files.</p>"},{"location":"cybersecurity/hacking/osint/images/#exploration-of-images","title":"Exploration of images","text":"<p>Use online tool https://www.aperisolve.com/</p> <p>Use HexEdit</p> <ul> <li> <p>\"Info Strings for show printable characters of image\" <pre><code>strings archive.png\nstrings archive.png &gt; printables.txt\nstrings -n 10 archive.png\n</code></pre></p> </li> <li> <p>\"steghide steganography\" <pre><code>steghide embed -cf imagen.jpg -ef archivo.txt\nsteghide info imagen.jpg\nsteghide extract -sf imagen.jpg\n</code></pre></p> </li> <li> <p>\"exiftool metadata\" <pre><code>exiftool imagen.jpg\nexiftool -Title=\"Mi Foto\" imagen.jpg\nexiftool -gps:all= imagen.jpg\nexiftool -TagsFromFile imagen1.jpg imagen2.jpg\nexiftool -a -u -g1 -w report.txt imagen.jpg\n</code></pre></p> </li> <li> <p>\"xxd Hexadecimal manipulation\" <pre><code>xxd archivo.bin\nxxd -p archivo.bin &gt; archivo.hex\n</code></pre></p> </li> <li> <p>\"Binwalk embedded data\" <pre><code>binwalk archive.bin\nbinwalk -M -r directory/\nbinwalk -e archive.bin\nbinwalk -Me archivo.bin\nbinwalk --signature 123 archive.bin\n</code></pre></p> </li> </ul>"},{"location":"cybersecurity/hacking/osint/images/#facial-recognition","title":"facial recognition","text":"<p>One of the online tools we look at in this class is 'PimEyes'. PimEyes is an online platform that uses facial recognition technology to search for similar images on the Internet based on an image provided as input. This tool can be useful in detecting a person's personal information, such as their social media profiles, email addresses, phone numbers, first and last names, etc.</p> <p>The operation of PimEyes is based on the analysis of facial patterns, which are compared with an online image database to find similarities. The platform also allows you to search for images of people who appear in a particular photo, which can be useful in the investigation of stalking cases or in the search for missing persons.</p> <ul> <li>Enlace a la web de [PimEyes](https://pimeyes.com/en](https://pimeyes.com/en)</li> </ul>"},{"location":"cybersecurity/tools/burpsuite/","title":"Burpsuite","text":"<p>The main tools that make up BurpSuite are as follows:</p> <ul> <li>Proxy: This is BurpSuite is main tool and acts as an intermediary between the web browser and the web server. This allows users to intercept and modify HTTP and HTTPS requests and responses sent between the browser and the server. The Proxy is also useful for vulnerability identification, as it allows users to examine traffic and analyze requests and responses.</li> <li>Scanner**: An automated vulnerability testing tool used to identify vulnerabilities in web applications. The Scanner uses advanced scanning techniques to detect web application vulnerabilities such as SQL injections, cross-site scripting (XSS), application layer security vulnerabilities (OSWAP Top 10) and more.</li> <li>Repeater: A tool that allows users to resend and replay HTTP and HTTPS requests. This is useful for testing different inputs and verifying server response. It is also useful for vulnerability identification, as it allows users to test different values and detect unexpected responses.</li> <li>Intruder: This is a tool used to automate brute force attacks. Users can define different payloads for different parts of the request, such as the URL, request body and headers. Intruder then automates the execution of the requests using different payloads and users can examine the responses to identify vulnerabilities.</li> <li>Comparer**: A tool used to compare two HTTP or HTTPS requests. This is useful for detecting differences between requests and responses and analyzing the security of the application.</li> </ul> <p>It is an extremely powerful tool, which can be used to identify a wide variety of security vulnerabilities in web applications. By using the different tools that make up BurpSuite, users can identify vulnerabilities in an automated or manual way, depending on their needs. This allows users to find vulnerabilities and fix them before they are exploited by an attacker.</p>"},{"location":"cybersecurity/tools/gobuster/","title":"Gobuster","text":"<p>Gobuster is a popular open-source tool used for subdomain and directory brute-forcing. It is designed to help security professionals and penetration testers discover hidden resources on web servers efficiently. Gobuster is known for its speed, flexibility, and ease of use, making it a go-to tool for reconnaissance tasks.</p> <ul> <li>Subdomain Enumeration: Gobuster can brute-force subdomains using DNS or VHOST enumeration.</li> <li>Directory Brute-Forcing: It can discover hidden directories and files on web servers.</li> <li>High Performance: Gobuster is optimized for speed, allowing for quick scans.</li> <li>Custom Wordlists: Supports the use of custom wordlists for targeted enumeration.</li> <li>Thread Control: Allows users to specify the number of concurrent threads for parallel requests.</li> </ul> <p>Gobuster is primarily used via the command line. Below are some common use cases:</p> <pre><code>gobuster dns -d example.com -w wordlist.txt -t 20\ngobuster dns -d example.com -w /usr/share/wordlists/dirb/common.txt -t 50\ngobuster dir -u http://example.com -w wordlist.txt -t 20\ngobuster dir -u http://example.com -w /usr/share/wordlists/dirb/common.txt -t 50 -x php,html -o results.txt -v\n</code></pre>"},{"location":"cybersecurity/tools/gobuster/#key-parameters-explained","title":"Key Parameters Explained:","text":"<ul> <li><code>dns</code>: Specifies DNS enumeration mode for subdomain discovery.</li> <li><code>dir</code>: Specifies directory enumeration mode for discovering hidden paths.</li> <li><code>-d</code>: Defines the target domain for subdomain enumeration (e.g., <code>-d example.com</code>).</li> <li><code>-u</code>: Specifies the target URL for directory brute-forcing (e.g., <code>-u http://example.com</code>).</li> <li><code>-w</code>: Specifies the wordlist file for fuzzing (e.g., <code>-w /path/to/wordlist</code>).</li> <li><code>-t</code>: Sets the number of concurrent threads for parallel requests (e.g., <code>-t 50</code> for 50 threads).</li> <li><code>-o</code>: Outputs results to a file (e.g., <code>-o results.txt</code>).</li> <li><code>-v</code>: Enables verbose output for detailed logging.</li> <li><code>-k</code>: Skips SSL certificate verification for HTTPS targets.</li> <li><code>-x</code>: Specifies file extensions to append during directory brute-forcing (e.g., <code>-x php,html,txt</code>).</li> <li><code>-s</code>: Filters responses by status codes (e.g., <code>-s 200,301</code>).</li> <li><code>-e</code>: Expands the output to include full URLs.</li> <li><code>-q</code>: Quiet mode; suppresses unnecessary output.</li> </ul>"},{"location":"cybersecurity/tools/gobuster/#conclusion","title":"Conclusion","text":"<p>Gobuster is an essential tool for reconnaissance in penetration testing and security assessments. Its ability to quickly enumerate subdomains and directories makes it invaluable for uncovering hidden resources and potential vulnerabilities.</p>"},{"location":"cybersecurity/tools/nmap/","title":"Nmap","text":"<p>Ever wondered what's hiding in your network? Meet Nmap, the free and open-source powerhouse that security pros swear by for scanning and auditing networks. Whether you're a newbie or a seasoned hacker, Nmap helps you uncover devices, services, and even vulnerabilities lurking in your network think routers, web servers, printers, IP cameras, and more!</p>"},{"location":"cybersecurity/tools/nmap/#one-line","title":"one line","text":"<pre><code>nmap -p- --open -sS -n -Pn -vvv IP -oG scanning\nnmap -sCV -p82,83 IP -oN targetInfo\n</code></pre>"},{"location":"cybersecurity/tools/nmap/#commands","title":"commands","text":"<pre><code>nmap -p-                 # scan all ports\nnmap --open              # only show open ports\nnmap -sS                 # TCP SYN connected\nnmap -n                  # without DNS\nnmap -Pn                 # skip host discovery\nnmap -vvv                # increase vervosite\nnmap -oG                 # type to export\n\nnmap -sCV                # apply default scripts to recognition and version of the service port\nnmap -p                  # only port\n</code></pre>"},{"location":"cybersecurity/tools/wfuzz/","title":"Wfuzz","text":"<p>Wfuzz is a versatile and powerful tool designed for web application security testing, including subdomain enumeration, directory brute-forcing, and parameter fuzzing. It allows security professionals and penetration testers to discover hidden resources, test for vulnerabilities, and automate repetitive tasks efficiently.</p>"},{"location":"cybersecurity/tools/wfuzz/#key-features-of-wfuzz","title":"Key Features of Wfuzz","text":"<ul> <li>Flexible Fuzzing: Wfuzz supports multiple payloads and injection points, making it ideal for testing various parts of a web application.</li> <li>Parallel Requests: It can handle multiple requests simultaneously, speeding up the testing process.</li> <li>Customizable Filters: Wfuzz provides options to filter responses based on status codes, word counts, and line counts.</li> <li>Payload Generators: It supports various payload types, including wordlists, ranges, and custom lists.</li> <li>Header Manipulation: Easily add or modify HTTP headers to simulate different scenarios.</li> </ul> <p>Wfuzz is primarily used via the command line. Below are some common use cases:</p> <pre><code>wfuzz -c -t 20 --hc=403 -w wordlist -H \"Host: FUZZ.TARGET\" https://TARGET\nwfuzz -c -t 20 --hc=403 -w /usr/share/wordlists/dirb/common.txt -H \"Host: FUZZ.example.com\" https://example.com\nwfuzz -c -w wordlist https://TARGET/FUZZ\nwfuzz -c -w wordlist https://TARGET/endpoint?param=FUZZ\nwfuzz --sc=200 --hl=80 -w wordlist https://TARGET/FUZZ\nwfuzz -w wordlist -z list,html-css-txt-php https://TARGET/FUZZ.FUZ2Z\nwfuzz -z range,1-200 https://TARGET/api?id=FUZZ\n</code></pre>"},{"location":"cybersecurity/tools/wfuzz/#parameters","title":"Parameters:","text":"<ul> <li><code>-c</code>: Enables colored output for better readability of results.</li> <li><code>-t</code>: Sets the number of concurrent threads for parallel requests (e.g., <code>-t 20</code> for 20 threads).</li> <li><code>--hc</code>: Hides responses with specific HTTP status codes (e.g., <code>--hc=403</code> to ignore forbidden responses).</li> <li><code>--sc</code>: Shows only responses with specific HTTP status codes (e.g., <code>--sc=200</code> for successful responses).</li> <li><code>-w</code>: Specifies the wordlist file for fuzzing (e.g., <code>-w /path/to/wordlist</code>).</li> <li><code>-H</code>: Allows adding or modifying HTTP headers (e.g., <code>-H \"Host: FUZZ.TARGET\"</code> for subdomain fuzzing).</li> <li><code>-z</code>: Defines custom payload generators (e.g., <code>-z range,1-200</code> for numeric ranges).</li> <li><code>--hl</code>: Hides responses based on line count (e.g., <code>--hl=80</code> to ignore responses with 80 lines).</li> <li><code>--hw</code>: Hides responses based on word count (e.g., <code>--hw=3</code> to ignore responses with 3 words).</li> <li><code>--sl</code>: Shows only responses with a specific line count (e.g., <code>--sl=234</code>).</li> <li><code>--sw</code>: Shows only responses with a specific word count (e.g., <code>--sw=3</code>).</li> <li><code>FUZZ</code>: Placeholder for the fuzzed value from the wordlist.</li> <li><code>--sc=200</code>: Shows only responses with a 200 status code.</li> <li><code>--hl=80</code>: Hides responses with 80 lines.</li> <li><code>-z list,html-css-txt-php</code>: Uses a custom list of file extensions.</li> <li><code>-z range,1-200</code>: Generates payloads from 1 to 200.</li> </ul>"},{"location":"cybersecurity/tools/wfuzz/#conclusion","title":"Conclusion","text":"<p>Wfuzz is an indispensable tool for web application security testing, offering flexibility, speed, and precision. Whether you're enumerating subdomains, brute-forcing directories, or fuzzing parameters, Wfuzz provides the features needed to uncover hidden vulnerabilities and resources.</p>"},{"location":"cybersecurity/tools/wordlists/","title":"WordLists","text":"<p>If you're diving into hacking, whether it's for brute-forcing or fuzzing, having the right wordlists is like having the right tools in your toolbox. Here's a rundown of some of the best wordlists out there, grouped by what they're useful for.</p>"},{"location":"cybersecurity/tools/wordlists/#the-big-players","title":"The Big Players","text":""},{"location":"cybersecurity/tools/wordlists/#seclists","title":"SecLists","text":"<p>This is the go-to collection for wordlists, neatly organized by context. Whether you're testing web apps or networks, SecLists has got you covered.</p>"},{"location":"cybersecurity/tools/wordlists/#bug-bounty-wordlists","title":"Bug-Bounty-Wordlists","text":"<p>A must-have for bug hunters, this repo packs all the essential wordlists you'll need while hunting for vulnerabilities.</p>"},{"location":"cybersecurity/tools/wordlists/#enumeration","title":"Enumeration","text":""},{"location":"cybersecurity/tools/wordlists/#subdomains","title":"Subdomains","text":"<p>For subdomain enumeration, the <code>subdomain-topmillion-500</code> list from SecLists is a game-changer. It's packed with the most common subdomains, making it perfect for discovery.</p>"},{"location":"cybersecurity/tools/wordlists/#passwords","title":"Passwords","text":""},{"location":"cybersecurity/tools/wordlists/#rockyou","title":"RockYou","text":"<p>Ever heard of the RockYou breach in 2009? This wordlist contains around 14 million unique passwords from that leak. It's a goldmine for password brute-forcing.</p>"},{"location":"cybersecurity/tools/wordlists/#usernames","title":"Usernames","text":"<p>Stay tuned\u2014we'll cover some great username wordlists in a future post!</p>"},{"location":"hardware/customKeyboard/","title":"Custom Keyboard","text":""},{"location":"hardware/customKeyboard/#and-why-would-you-get-one-custom-keyboard","title":"And why would you get one custom keyboard?","text":"<p>Actually, there are many reasons.</p> <p>First, you can choose your own key layout, which can help a lot if you spend a lot of time typing or programming. It improves posture, reduces wrist pain and, if you get the hang of it, you can even type faster.</p> <p>Then there are the switches. There is a great variety: linear, tactile, clicky... and the best thing is that you can lubricate them to your liking so they feel exactly the way you want them to. If you are detail-oriented, this is a marvel.</p> <p>Another advantage is the aesthetics. You can make it as minimalist or as colorful as you want. Although for me that's secondary compared to what's really powerful: advanced features.</p> <p>With a custom keyboard you can use layers, macros, and reassign any key. Do you want to hold down the space bar to activate other symbols? A shortcut to copy, paste or open the browser? Also. All this with firmwares like QMK or VIA.</p> <p>In short, a keyboard like this is an extension of the way you work and your personality. And building something that fits you exactly... is incredibly satisfying. And the best part: **you'll never look at an ordinary office keyboard with the same eyes again.</p>"},{"location":"hardware/customKeyboard/#my-layout","title":"My layout","text":"<p>Now I'll show you the layout I use. It's totally adapted to my needs, so it won't serve you the same as it is, but it can serve as an inspiration or example to create your own.</p> <p>Layout 1 </p> <p>Layout 2 </p> <p>You can see the Config file</p>"},{"location":"hardware/hardware/","title":"Hardware","text":"<p>In simple terms, hardware is everything physical in a device. It's the part you can see and touch: the casing, the screen, the keyboard, the circuitry, the processor, the memory, and so on. It's what makes the software (the programs, games, apps) work.</p>"},{"location":"hardware/hardware/#here-are-some-things-about-hardware","title":"Here are some things about hardware","text":"<ul> <li> custom keyboard</li> <li> Pendrive</li> </ul>"},{"location":"hardware/pendrive/","title":"Pendrive","text":""},{"location":"hardware/pendrive/#why-does-the-flash-drive-sometimes-fail","title":"Why does the flash drive sometimes fail?","text":"<p>Sometimes our flash drive becomes unruly and doesn't work properly. It can be due to several things:</p> <ul> <li>It may have been infected with a virus or malware.</li> <li>Some strange program may have made the computer not recognize it.</li> <li>Or it may have corrupted or suspicious files, and some machines block it because of that.</li> </ul> <p>But don't worry, it is almost always not a physical problem, but something is wrong with the way the files are organized.</p>"},{"location":"hardware/pendrive/#reset-the-pendrive","title":"Reset the pendrive","text":"<p>If your pendrive does not work or does not appear, what you can do is delete it completely and format it to make it as good as new. Here are the steps to do it in Windows using the console, which is the safest and fastest way.</p> <ol> <li> <p>Open the console (CMD) as administrator. Search for \u201ccmd\u201d in the start menu. and Right click and choose \u201cRun as administrator\u201d.</p> </li> <li> <p>Type and execute <pre><code>diskpart\n</code></pre></p> </li> <li> <p>List the disks to find your pendrive List the disks to find your pendrive List the disks to find your pendrive <pre><code>list disk\n</code></pre></p> </li> <li> <p>Select your flash drive (e.g. Disk 1), select according to the size of the usb drive <pre><code>select disk 1\n</code></pre></p> </li> <li> <p>Delete all contents <pre><code>clean\n</code></pre></p> </li> <li> <p>Create a new partition <pre><code>create partition primary\nlist partition\n</code></pre></p> </li> <li> <p>Activate the partition and quick format to NTFS. <pre><code>activate\nformat fs=NTFS label=\u201cPendrive\u201d quick\n</code></pre></p> </li> </ol> <p>And that's it! With that your flash drive should be clean and working like new again. This way you avoid recognition problems or crashes due to damaged files.</p>"},{"location":"software/software/","title":"Software","text":"<p>Software\u00a0is a set of\u00a0computer programs \"Computer program\")\u00a0and associated\u00a0documentation\u00a0and\u00a0data.\u00a0This is in contrast to\u00a0hardware \"Computer hardware\"), from which the system is built and which actually performs the work.</p> <p>At the\u00a0lowest programming level,\u00a0executable code\u00a0consists of\u00a0machine language\u00a0instructions supported by an individual\u00a0processor \"Microprocessor\")\u2014typically a\u00a0central processing unit \"Central processing unit\")\u00a0(CPU) or a\u00a0graphics processing unit \u00a0(GPU). Machine language consists of groups of\u00a0binary values \"Binary number\")\u00a0signifying\u00a0processor instructions \"Instruction set architecture\")\u00a0that change the state of the computer from its preceding state. For example, an instruction may change the value stored in a particular storage location in the computer\u2014an effect that is not directly observable to the user. An instruction\u00a0may also invoke \"System call\")\u00a0one of many\u00a0input or output operations \"Input/output\"), for example displaying some text on a computer screen; causing state changes which should be visible to the\u00a0user \"User (computing)\"). The processor\u00a0executes\u00a0the instructions in the order they are provided, unless it is instructed to\u00a0\"jump\" to a different instruction, or is\u00a0interrupted\u00a0by the operating system. As of 2015, most\u00a0personal computers \"Personal computer\"),\u00a0smartphone\u00a0devices and\u00a0servers\u00a0have\u00a0processors with multiple execution units \u00a0or\u00a0multiple processors performing computation\u00a0together, and computing has become a much more\u00a0concurrent\u00a0activity than in the past.</p>"},{"location":"software/software/#linux","title":"Linux","text":"<p>Linux is an open source operative system(OS). An operative system is the software that directly manager a system's hardware and resources, like CPU,memory and storage.</p> <ul> <li> Curl</li> <li> Cron Jobs</li> <li> Permissions</li> <li> Directories</li> <li> BSPWM</li> <li> Kitty</li> <li> Polybar</li> <li> Fonts</li> <li> Notifications</li> <li> Zsh</li> </ul>"},{"location":"software/software/#programming","title":"Programming","text":"<p>Computer programming is the process of performing a particular computation (or more generally, accomplishing a specific computing result), usually by designing/building an executable computer program. Programming involves tasks such as analysis, generating algorithms, profiling algorithms' accuracy and resource consumption, and the implementation of algorithms (usually in a chosen programming language, commonly referred to as coding).</p> Python Programming <p> <ul> <li> Python Syntax </li> <li> Python OOP </li> <li> Python Strings </li> </ul> <ul> <li> Python Files </li> <li> Python Modules </li> <li> Python Templates </li> </ul> </p> Bash Programming <p> <ul> <li> Bash Syntax </li> </ul> <ul> <li> Bash Banners </li> </ul> </p>"},{"location":"software/software/#tools","title":"Tools","text":"<p>What Are Technology Tools? A technology tool is\u00a0an electronic, digital, or physical resource that can support teachers in the delivery and testing of content. Technology tools include apps, platforms, and software, and can be used in virtual, hybrid, or traditional learning environments</p> <ul> <li> Windows Environment</li> <li> My Standard Hotkeys</li> <li> Obsidian</li> <li> Zen Browser</li> <li> Neovim</li> <li> Git</li> </ul>"},{"location":"software/software/#windows","title":"Windows","text":"<p>A window is\u00a0a separate viewing area on a computer display screen in a system that allows multiple viewing areas as part of a graphical user interface ( GUI ). Windows are managed by a windows manager as part of a windowing system . A window can usually be resized by the user. It's an eoperative system multitask and multiuser and It is compatible with most computers on the market.</p> <ul> <li> PowerShell</li> </ul>"},{"location":"software/linux/bspwm/","title":"BSPWM","text":"<p>BSPWM (Binary Space Partitioning Window Manager) is a lightweight, tiling window manager that organizes windows in a binary tree structure. It is highly customizable and scriptable, making it a favorite among minimalists and power users.</p> <p>SXHKD (Simple X HotKey Daemon) is a lightweight and efficient hotkey daemon designed to work seamlessly with window managers like BSPWM. It allows users to define and manage keyboard shortcuts for various actions, such as launching applications, controlling window behavior, and executing scripts. SXHKD is highly configurable and supports dynamic keybindings, making it a powerful tool for customizing your workflow.</p>"},{"location":"software/linux/bspwm/#installation","title":"Installation","text":"<ol> <li>Install BSPWM using your package manager:    <pre><code>sudo apt install bspwm  # For Debian/Ubuntu\nsudo pacman -S bspwm    # For Arch Linux\n</code></pre></li> <li>Install a complementary tool like <code>sxhkd</code> for keybindings:    <pre><code>sudo apt install sxhkd\n</code></pre></li> <li>Copy the default configuration files to your home directory: <pre><code>mkdir -p ~/.config/bspwm\ncp /usr/share/doc/bspwm/examples/bspwmrc ~/.config/bspwm/\ncp /usr/share/doc/bspwm/examples/sxhkdrc ~/.config/skhkd/\n</code></pre></li> </ol> <p>Edit <code>~/.config/bspwm/bspwmrc</code> and <code>~/.config/sxhkd/sxhkdrc</code> to customize. For more advanced configurations, refer to the bspwm. And sxhkd.</p>"},{"location":"software/linux/bspwm/#configs-bspwm","title":"Configs BSPWM","text":"<pre><code># fix java for virtual machines\nxprop | grep WM_CLASS\n\n# 10 windows\nbspc monitor -d I II III IV VI VII VIII IX X\n\n# cursor\nxsetrooot -cursor_name leftptr &amp;\n\n# style configs\nbspc config border_width 1\nbspc config normal_border_color #535335\n\n\n# configuration of how an application is opened\n\nbspc rule -a 'firefox' desktop='I'\nbspc rule -a 'Nitrogen' state=floating follow=on\n\n\n# auto-start applications\npicom &amp;\n~/.config/polybar/lauch\n</code></pre>"},{"location":"software/linux/bspwm/#bspwm_resize","title":"bspwm_resize","text":"<pre><code>#usr/bin/env dash\n\nif bspc query -N -n focused.floating &gt; /dev/null; then\n  step=20\nelse\n  step=100\nfi\n\ncase \"$1\" in\n  west) dir=right; falldir=left; x=\"-$step\"; y=0;;\n  east) dir=right; falldir=left; x=\"$step\"; y=0;;\n  north) dir=top; falldir=bottom; x=0; y=\"-$step\";;\n  south) dir=top; falldir=bottom; x=0; y=\"$step\";;\nesac\n\nbspc node -z \"$dir\" \"$x\" \"$y\" || bspc node -z \"$falldir\" \"$x\" \"$y\"\n</code></pre>"},{"location":"software/linux/bspwm/#sxhkd-configs","title":"SXHKD configs","text":"<pre><code># custom resize\nsuper + alt + {Left,Down,Up,Right}\n  /home/nameless/.config/bspwm/bspwm_resize {west,south,north,east}\n\n# execute app\n\nsuper + alt + 2\n  flameshot gui\n\nsuper + x\n  betterlockscreen -l dim\n</code></pre> <p>For a deeper dive into my personal BSPWM and SXHKD configurations, including themes, keybindings, and custom scripts, check out my dotfile repository on GitHub:</p> <p>GitHub - R3D4L1T/myDotfiles</p>"},{"location":"software/linux/cronJobs/","title":"Cron and Anacron Jobs","text":""},{"location":"software/linux/cronJobs/#cron-jobs","title":"Cron Jobs","text":"<p>Cron is a utility program that lets users input commands for scheduling tasks repeatedly at a specific time. Tasks scheduled in cron are called cron jobs. Users can determine what kind of task they want to automate and when it should be executed. Cron is ideal for systems that run continuously, such as servers, ensuring tasks are executed precisely at the scheduled times.</p>"},{"location":"software/linux/cronJobs/#anacron-jobs","title":"Anacron Jobs","text":"<p>Anacron (\"anachronistic cron\") is designed for systems that may not run 24/7, such as laptops or desktops. Unlike cron, Anacron ensures that tasks are executed even if the system was offline during the scheduled time. It works by running missed jobs the next time the system is powered on. Anacron is particularly useful for periodic maintenance tasks that don't require strict timing but must eventually run.</p>"},{"location":"software/linux/cronJobs/#key-differences","title":"Key Differences","text":"<ul> <li>Execution Timing: Cron runs tasks at exact scheduled times, while Anacron runs them as soon as possible after the scheduled time if the system was off.</li> <li>Use Case: Cron is for always-on systems; Anacron is for intermittently powered systems.</li> <li>Flexibility: Anacron is more forgiving for missed executions, making it better suited for personal computers.</li> </ul>"},{"location":"software/linux/cronJobs/#table-of-examples","title":"Table of Examples","text":"Second Minute Hour Day of Month Month Day of Week Command * * * * * * Runs every minute 0 5 * * * * Runs at 5 minutes past every hour 0 0 12 * * * Runs at noon every day 0 0 * * * 1 Runs at midnight every Monday 0 0 1 1 * * Runs at 1 AM on the 1<sup>st</sup> of every month 0 0 * * 1 * Runs at midnight every day in January 0 0 * * * 1-5 Runs at midnight every weekday (Monday to Friday) 0 0 0 1 * * Runs at midnight on the 1<sup>st</sup> of every month 0 0 0 * * 0 Runs at midnight every Sunday 0 30 9 * * * Runs at 9:30 AM every day 0 0 18 * * 5 Runs at 6 PM every Friday 0 0 8 15 * * Runs at 8 AM on the 15<sup>th</sup> of every month 0 0 0 * 12 * Runs at midnight every day in December 0 0 0 1 1 * Runs at midnight on January 1<sup>st</sup> every year <p>Explanation for the last example: The cron job <code>0 0 0 1 1 *</code> runs at midnight on January 1<sup>st</sup> every year. This is useful for scheduling annual tasks like yearly reports, backups, or system maintenance that should occur at the start of the new year.</p> <p>Note</p> <p>If this is not comprehensible for you, you can generate examples on websites like https://site24x7.com or similar tools, or ask for help from any AI of your choice. </p>"},{"location":"software/linux/curl/","title":"Curl","text":"<p>cURL is a versatile command-line tool and library used to transfer data to or from server.</p> <p>it supports multiple protocols and features, including: - HTTPS certificates - HTTP POST and PUT request - FTP uploads and downloads - Kerberos authentication - HTTP form submissions - Proxi support - Cookies and much more</p> <p>its main purpose is to autamate file transfers or run unattended operations in scripts.</p>"},{"location":"software/linux/curl/#oneliners","title":"oneliners","text":"<pre><code># Fetch a webpage and display it in the terminal\ncurl https://www.example.com/\n\n# Download a webpage and save it as \"thatpage.html\"\ncurl -o thatpage.html http://www.example.com/\n\n# Download a file with its original filename\ncurl -O http://www.example.com/index.html\n\n# send json data\ncurl -X POST -H \"Content-Type: application/json\" \\ -d '{\"name\":\"jhon\"}' [url]\n</code></pre>"},{"location":"software/linux/curl/#common-curl-options","title":"common cURL Options","text":"<pre><code># download and keep the original filename from the server\ncurl -O [URL]\n\n# download and save with a custom name\ncurl -o [custom name] [URL]\n\n# follow 3xx redirects\ncurl -L [URL]\n\n# custom headers\ncurl -H \"User-agent: myAgent\" [URL]\n\n# send form data\ncurl -d \"name=Jhon&amp;aga=50\" [URL]\ncurl -d @data.txt [URL]\n\n# verbose output\ncurl -v\ncurl --trace trace.txt\n</code></pre>"},{"location":"software/linux/directories/","title":"Directories","text":""},{"location":"software/linux/directories/#list-of-most-important-directories","title":"list of most important directories","text":"Directory Purpose <code>/</code> Root directory \u2014 the starting point of the filesystem. All files and folders live under here. <code>/bin</code> Essential user commands (like <code>ls</code>, <code>cp</code>, <code>mv</code>) needed for the system to operate. <code>/boot</code> Files needed to boot Linux, including the kernel and bootloader configs. <code>/dev</code> Device files (represent hardware and virtual devices). Example: <code>/dev/sda</code> for a hard drive. <code>/etc</code> System-wide configuration files. <code>/home</code> Personal directories for each user (e.g., <code>/home/nameless</code>). <code>/lib</code>, <code>/lib64</code> Shared libraries needed by programs and the kernel. <code>/media</code> Mount points for removable media like USB drives and CDs. <code>/mnt</code> Temporary mount points (often used by sysadmins). <code>/opt</code> Optional or third-party software. <code>/proc</code> Virtual filesystem with system and process information. <code>/root</code> Home directory for the root user. <code>/run</code> Temporary files and runtime information since last boot. <code>/sbin</code> System administration commands (often need root privileges). <code>/srv</code> Data for services like web or FTP servers. <code>/sys</code> Virtual filesystem with kernel and hardware info. <code>/tmp</code> Temporary files (cleared on reboot in most systems). <code>/usr</code> User programs, libraries, documentation. <code>/usr/bin</code>, <code>/usr/lib</code>, <code>/usr/share</code> live here. <code>/var</code> Variable data like logs (<code>/var/log</code>), spool files, caches."},{"location":"software/linux/fonts/","title":"Fonts","text":"<p>First, we need to ensure that the font we want to add is not already installed. For this, we can use the following command in the terminal:</p> <pre><code>fc-list\n</code></pre> <p>This command shows all the fonts installed on the system. You can search for your font with something like:</p> <pre><code>fc-list | grep \"FontName\"\n</code></pre>"},{"location":"software/linux/fonts/#download-the-font","title":"\ud83d\udce5 Download the Font","text":"<p>If it doesn't appear, you'll need to download it. Fonts usually come in .ttf or .otf files. You can download them from GitHub, Google Fonts, or any other reliable source.</p>"},{"location":"software/linux/fonts/#where-to-place-the-fonts","title":"\ud83d\udcc1 Where to Place the Fonts","text":"<p>Once the font is downloaded:</p> <ul> <li> <p>To install it only for your user, paste it inside the <code>.fonts</code> folder or, in some cases, inside <code>.local/share/fonts</code>: <pre><code>~/.fonts\n~/.local/share/fonts\n</code></pre></p> </li> <li> <p>To install it for all system users, place it in: <pre><code>/usr/share/fonts\n</code></pre></p> </li> </ul> <p>note</p> <p>\u26a0\ufe0f Make sure the fonts are inside a folder named after the font! This keeps everything organized and easy to manage.</p>"},{"location":"software/linux/fonts/#reload-the-fonts","title":"\ud83d\udd04 Reload the Fonts","text":"<p>After copying the files, run this command so the system recognizes the new fonts:</p> <pre><code>fc-cache -fv\n</code></pre> <p>This command updates the font cache and will show you if everything was installed correctly.</p>"},{"location":"software/linux/kitty/","title":"Kitty","text":"<p>Kitty is a powerful, GPU-accelerated terminal emulator designed for power users who prioritize keyboard efficiency. It offers a streamlined and highly customizable experience, making it a favorite among developers and system administrators.</p> <ul> <li>Keyboard-Centric Design: All controls are optimized for keyboard use, ensuring a fast and efficient workflow.</li> <li>Simple Configuration: Configure Kitty with a single, human-readable configuration file for easy reproducibility and version control.</li> <li>GPU Acceleration: Leverages modern GPU capabilities for smooth rendering and performance.</li> <li>Cross-Platform: Available on Linux, macOS, and other Unix-like systems.</li> </ul> <p>For comprehensive documentation, visit the official Kitty website.</p> <p>While Kitty excels in many areas, other terminal emulators like Alacritty and Ghostty offer different features. However, Kitty's balance of performance and usability makes it a standout choice.</p> <p>Now my configs This config use the ComicMono as font family</p> <pre><code>#### kitty.conf\nenable_audio_bell no\n\ninclude color.ini\n\nfont_family      ComicMono\n\nmap ctrl+left neighboring_window left\n\nmap f1 copy_to_buffer a\nmap f2 paste_from_buffer a\n\nbackground_opacity 0.75\n\nshell zsh\n</code></pre> <pre><code>## style color.ini\ncursor_shape Underline\nwindow_padding_width 20\n\n#selection_background #1f1f1f\n#selection_foreground #131313\nforeground   #e0d1d2\nbackground   #040406\ncursor       #e0d1d2\ncolor7       #e0d1d3\ncolor15      #e0d1d2\n</code></pre> <p>For a deeper dive into my personal kitty configurations: GitHub - R3D4L1T/myDotfiles</p>"},{"location":"software/linux/notifications/","title":"Notifications","text":""},{"location":"software/linux/notifications/#notifications-on-linux","title":"Notifications on Linux","text":"<p><code>notify-send</code> is a command-line tool used to send desktop notifications on Linux systems. It is commonly used in scripts or applications to alert users about events or status updates.</p>"},{"location":"software/linux/notifications/#basic-usage","title":"Basic Usage","text":"<pre><code>notify-send \"message\"\nnotify-send \"title\" \"message\"\nnotify-send -i 'audio-volume-medium' 'Volume'\nnotify-send -u critical -t 5000 \"Alert\" \"System update required!\"\nnotify-send -u normal -i /usr/share/icons/Paper/64x64/apps/email.png \"New Email\" \"you have a new email!\" &amp;&amp; paplay /usr/share/sounds/freedesktop/stereo/message-new-instant.oga\n</code></pre>"},{"location":"software/linux/notifications/#common-options","title":"Common Options","text":"<ul> <li><code>-i, --icon=ICON</code>: Specifies an icon to display with the notification.</li> <li><code>-t, --expire-time=TIME</code>: Sets the notification timeout in milliseconds.</li> <li><code>-u, --urgency=LEVEL</code>: Sets the urgency level (low, normal, critical).</li> <li><code>-h, --help</code>: Displays help information.</li> </ul>"},{"location":"software/linux/notifications/#dunst","title":"Dunst","text":"<p>Dunst is a lightweight notification daemon for Linux that works as an alternative to the default notification system. It is highly customizable and integrates well with tiling window managers like BSPWM, i3, and others.</p> <pre><code># Install Dunst and its companion tool `dunstify`\nsudo apt install dunst\n\n# For tiling window managers (e.g., BSPWM), add Dunst to autostart\n# Add the following line to `~/.xinitrc` or `~/.config/bspwm/bspwmrc`:\npkill dunst &amp;&amp; dunst &amp;\n</code></pre>"},{"location":"software/linux/notifications/#usage","title":"Usage","text":"<pre><code>dunstify \"Hello World\"\ndunstify -u critical -t 0 \"Battery Low\" \"Plug in your charger!\"\ndunstify -i network-wireless \"WiFi Connected\" \"SSID: MyNetwork\"\n</code></pre> <ul> <li> <p>Progress Bar <pre><code>id=1234\nfor i in $(seq 0 100); do\n    dunstify -r $id \"Download Progress\" \"$i% completed\"\n    sleep 0.1\ndone\n</code></pre></p> </li> <li> <p>Clickable Actions <pre><code>dunstify -u normal -t 0 \\\n    -A yes,OK -A no,Cancel \\\n    \"Confirm\" \"Do you want to proceed?\"\n</code></pre></p> </li> </ul>"},{"location":"software/linux/notifications/#options","title":"Options","text":"Option Description Example <code>-u</code> Urgency: <code>low</code>, <code>normal</code>, <code>critical</code> <code>-u critical</code> <code>-t</code> Timeout in ms (<code>0</code> = stays until closed) <code>-t 5000</code> <code>-i</code> Icon path or icon name <code>-i battery-full</code> <code>-r</code> Replace notification with same ID <code>-r 123</code> <code>-A</code> Add clickable actions <code>-A yes,OK -A no,Cancel</code>"},{"location":"software/linux/notifications/#customization","title":"Customization","text":"<p>Dunst can be customized by editing its configuration file: <pre><code># Edit the Dunst configuration file\nnano ~/.config/dunst/dunstrc\n</code></pre></p> <p>For more details, refer to the Dunst documentation.</p>"},{"location":"software/linux/permissions/","title":"Understanding <code>chmod</code> in Linux","text":"<p>File permissions are a fundamental aspect of Linux systems, ensuring security and proper access control. The <code>chmod</code> command is a powerful tool for modifying these permissions. This guide will walk you through its usage with practical examples.</p>"},{"location":"software/linux/permissions/#introduction-to-file-permissions","title":"Introduction to File Permissions","text":"<p>Before diving into <code>chmod</code>, let's understand the basics of Linux file permissions:</p> <ul> <li>**Read \u00ae **: Allows viewing the file's contents.</li> <li>**Write (w) **: Allows modifying the file.</li> <li>**Execute (x) **: Allows running the file as a program.</li> </ul> <p>Permissions are assigned to three categories of users:</p> <ol> <li>Owner: The user who owns the file.</li> <li>Group: Users who are part of the file's group.</li> <li>Others: All other users.</li> </ol> <p> </p>"},{"location":"software/linux/permissions/#basic-chmod-commands","title":"Basic <code>chmod</code> Commands","text":"<p>Here are some common <code>chmod</code> commands to manage file permissions:</p> <pre><code># Add execute permission for others\nchmod o+x file\n\n# Remove write permission for others\nchmod o-w file\n\n# Change the group of a directory\nchgrp group_name /directory\n\n# Set read and write permissions for the owner only\nchmod 600 file\n\n# Recursively add execute permission to a directory\nchmod -R +x directory\n</code></pre>"},{"location":"software/linux/permissions/#managing-users-and-groups","title":"Managing Users and Groups","text":""},{"location":"software/linux/permissions/#adding-a-user","title":"Adding a User","text":"<pre><code># Create a new user with a home directory and bash shell\nuseradd foo -s /bin/bash -d /home/foo\n\n# Set a password for the user\npasswd foo\n\n# Change the group ownership of a file\nchgrp foo foo\n\n# Change the owner of a file\nchown foo foo\n\n# Alternative: Change owner and group simultaneously\nchown foo:foo foo\n</code></pre>"},{"location":"software/linux/permissions/#adding-a-group","title":"Adding a Group","text":"<pre><code># Create a new group\ngroupadd new_group\n\n# Add a user to the group\nusermod -a -G new_group foo\n</code></pre>"},{"location":"software/linux/permissions/#special-permissions","title":"Special Permissions","text":"<p>Linux also supports special permissions for advanced use cases:</p> <pre><code># Set the sticky bit (restricts file deletion)\nchmod +t file\n\n# Make a file immutable (cannot be modified or deleted)\nchattr +i file\n\n# Set the setgid bit (files inherit group ownership)\nchmod g+s file\n\n# Set SUID (run as owner) and standard permissions\nchmod 4755 file\n</code></pre>"},{"location":"software/linux/permissions/#tips-and-notes","title":"Tips and Notes","text":"<ul> <li>Always double-check permissions before applying them recursively (<code>-R</code> flag).</li> <li>Use <code>ls -l</code> to view current permissions of files and directories.</li> <li>Be cautious with <code>chmod 777</code>\u2014it grants full permissions to everyone, which can be a security risk.</li> </ul> <p>By mastering <code>chmod</code>, you can effectively manage file access and enhance the security of your Linux system.</p>"},{"location":"software/linux/picom/","title":"Picom","text":"<p>the picom tool is for generate transparency in the shell</p> <p>for use install dependecies <pre><code>sudo apt install -y meson picom libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev libpcre3 libpcre3-dev\n</code></pre></p> <pre><code>sudo apt install aptitude\nsudo aptitude install -y meson picom libxext-dev libxcb1-dev libxcb-damage0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev libxcb-render0-dev libxcb-composite0-dev libxcb-image0-dev libxcb-present-dev libxcb-xinerama0-dev libpixman-1-dev libdbus-1-dev libconfig-dev libgl1-mesa-dev libpcre2-dev libevdev-dev uthash-dev libev-dev libx11-xcb-dev libxcb-glx0-dev libpcre3 libpcre3-dev\n</code></pre> <ul> <li>Install from repository <pre><code>git clone https://github.com/ibhagwan/picom.git\n\ncd picom\ngit submodule update --init --recursive\nmeson --buildtype=release . build\nninja -C build\nsudo ninja -C build install\n\n# create ~/.config/picom/picom.conf\n</code></pre></li> </ul> <p>For configuration examples and detailed documentation, refer to the official picom documentation. You can also explore my custom configurations in my GitHub repository: R3D4L1T/dotfiles.</p> <p>Use feh for wallpapers <pre><code>sudo apt install feh\nfeh --bg-scale /home/nameless/Pictures/wallpaper.png\n</code></pre></p>"},{"location":"software/linux/polybar/","title":"Polybar","text":""},{"location":"software/linux/polybar/#install-polybar-and-rofi-and-all-dependencies","title":"Install polybar and rofi and all dependencies","text":"<pre><code>sudo apt install -y polybar rofi cmake cmake-data pkg-config python3-sphinx libcairo2-dev libxcb1-dev libxcb-util0-dev libxcb-randr0-dev libxcb-composite0-dev python3-xcbgen xcb-proto libxcb-image0-dev libxcb-ewmh-dev libxcb-icccm4-dev libxcb-xkb-dev libxcb-xrm-dev libxcb-cursor-dev libasound2-dev libpulse-dev libjsoncpp-dev libmpdclient-dev libuv1-dev libnl-genl-3-dev\n</code></pre>"},{"location":"software/linux/polybar/#cloning-and-install","title":"cloning and install","text":"<pre><code>git clone --recursive https://github.com/polybar/polybar.git\n</code></pre> <pre><code># install polybar\ncd polybar\nmkdir build\ncd build\ncmake ..\nmake -j$(nproc)\nsudo make install\n</code></pre>"},{"location":"software/linux/polybar/#configs","title":"Configs","text":"<ul> <li> <p>**lauch.sh: ** this is the script for execute polybar <pre><code>#!/usr/bin/env bash\n\n# Terminate already running bar instances\nkillall -q polybar\n\n# Wait until the processes have been shut down\nwhile pgrep -u $UID -x polybar &gt;/dev/null; do sleep 1; done\n\n# Launch the bar\npolybar -q top -c /home/nameless/.config/polybar/config.ini &amp;\n</code></pre></p> </li> <li> <p>**config.ini: ** this is the file where can saved the general configs and calling to other modules. The most important content have is this <pre><code>;; general\n[global/wm]\nmargin-botton = 0\nmargin-top = 0\n\n;; file inclusion\ninclude-file = ~/.config/polybar/bars.ini\ninclude-file = ~/.config/polybar/colors.ini\ninclude-file = ~/.config/polybar/modules.ini\ninclude-file = ~/.config/polybar/user_modules.ini\n\n\n[bar/main]\n;; .....\n;; ....\nfont-0 = ComicMono:style=Medium:size=10;4\n\n[bar/top]\ninherit = bar/main\n\nmodules-left = laucher workspace ........\nmodules-right = volumen battery_bar sysmenu\nenable-ipc = true\n</code></pre></p> </li> <li> <p>**colors.ini: **This file is for colors <pre><code>[color]\nbackground = #040406\nbackground-alt = #8C040406\nforeground = #e0d1d2\nforeground-alt = #33e0d1d2\nprimary = #676867\nred = #d43e43\ngreen = #6f424c\nyellow = #9a3033\n</code></pre></p> </li> <li> <p>**bars.ini: ** <pre><code>[module/volume]\ntype = internal/alsa\nmaster-soundcard = default\nspeaker-soundcard = default\nheadphone-soundcard = default\n;;\n;;\n\n[module/battery_bar]\ntype = internal/battery\nfull-at  = 99\nbattery = BAT1\nadapter = ACAD\n;;;;\n;;;;\n</code></pre></p> </li> <li> <p>**modules.ini: **This file is for saved the default modules. This modules you can show in the wiki Configuration \u00b7 polybar/polybar Wiki \u00b7 GitHub <pre><code>[module/alsa]\ntype = internal/alsa\n;;;\n;;;;\n;;;\n\n[module/battery]\ntype = internal/battery\n;;\n;;\n</code></pre></p> </li> <li> <p>**user_modules.ini: ** tis file saved the custom modules for user with the same syntax <pre><code>[module/updates]\ntype = custom/script\nexec = ~/scripts/update.sh\nclick-left = ~/scripts/laucher.sh\nclick-right = ~/scrips/laucher.sh\n\n[module/browser]\ntype = module/apps\ncontent-foreground = #36543\ncontent = &lt;&lt;\n</code></pre></p> </li> </ul> <p>you can show all configs on my dotfile on github GitHub - R3D4L1T/myDotfiles</p> <p></p>"},{"location":"software/linux/zsh/","title":"Zsh","text":"<p>Zsh (Z Shell) is a powerful and highly customizable shell for Unix-like operating systems. Powerlevel10k is a fast and flexible theme for Zsh that enhances the terminal experience with rich visual feedback.</p>"},{"location":"software/linux/zsh/#installing-zsh","title":"Installing Zsh","text":"<pre><code>sudo apt update\nsudo apt install zsh\n</code></pre>"},{"location":"software/linux/zsh/#installing-powerlevel10k","title":"Installing Powerlevel10k","text":"<pre><code>cd; git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/.powerlevel10k\n</code></pre>"},{"location":"software/linux/zsh/#add-to-zsh-configuration","title":"Add to Zsh Configuration:","text":"<pre><code># Add the following line to ~/.zshrc\nsource ~/.powerlevel10k/powerlevel10k.zsh-theme\n# Run the Configuration  for p10k\np10k configure\n</code></pre>"},{"location":"software/linux/zsh/#customizing-zshrc","title":"Customizing <code>.zshrc</code>","text":"<pre><code>cd /usr/share\nsudo mkdir -p zsh-sudo\ncd zsh-sudo\nsudo wget https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins/sudo/sudo.plugin.zsh\n</code></pre> <pre><code># use plugins\nsource ~/.powerlevel10k/powerlevel10k.zsh-theme\nsource /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\nsource /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh\n\n# alias\nalias ll=\"ls -la\"\nalias gs=\"git status\"\nalias gp=\"git pull\"\nalias gcm=\"git commit -m\"\nalias update=\"sudo apt update &amp;&amp; sudo apt upgrade\"\n</code></pre>"},{"location":"software/linux/zsh/#shortcuts","title":"Shortcuts","text":"Command Description Ctrl+c kill the process Ctrl+u clear line Ctrl+l clear the terminal Ctrl+w delete one word before the line alt+d delete one word after the line Ctrl+e go to the end of the line Ctrl+i, TAB autocomplete Ctrl+7 Return action by action Ctrl+a go to start line Ctrl+s hide write terminal (Ctrl+q) for end Ctrl+f go to next character Ctrl+b go to before character Ctrl+k delete all after the cursor Ctrl+z stop an process alt+t reverse two words before the line alt+l go to end of next word alt+f go to start of next word alt+h go to manual Ctrl+- resize content terminal !! run last command"},{"location":"software/programming/bash/bashBanners/","title":"Bash Banners","text":"<p>Terminal banners can add a splash of personality to your command-line interface, though they might not be everyone's cup of tea. While some find them noisy or unnecessary, others enjoy the visual flair they bring. Tools like figlet or the <code>banner</code> command offer more advanced options, but for now, here's a simple yet effective way to create your own terminal banner.</p>"},{"location":"software/programming/bash/bashBanners/#banner-1","title":"Banner  1","text":"<pre><code>#!/usr/bin/env bash\n\n# Colores\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nCYAN='\\033[0;36m'\nNC='\\033[0m' # Reset color\n\n##############################\nUSER_NAME=$(whoami)\nHOST_NAME=$(hostname)\nOS=$(grep '^PRETTY_NAME=' /etc/os-release | cut -d= -f2 | tr -d '\"')\nKERNEL=$(uname -r)\nSHELL_NAME=$(basename \"$SHELL\")\nUPTIME=$(uptime -p)\nDATE=$(date +\"%A, %d %B %Y %H:%M:%S\")\n\n# ASCII Art de DOG\nASCII=(\n  \"\u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \"\n  \"\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2588\u2588\u2557\"\n  \"\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\"\n  \"\u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2551   \u2588\u2588\u2551\u2588\u2588\u2551   \u2588\u2588\u2551\"\n  \"\u2588\u2588\u2551     \u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u255a\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\"\n  \"\u255a\u2550\u255d      \u255a\u2550\u2550\u2550\u2550\u2550\u255d  \u255a\u2550\u2550\u2550\u2550\u2550\u255d \"\n)\n\nINFO=(\n  \"Usuario:   $USER_NAME\"\n  \"Host:      $HOST_NAME\"\n  \"OS:        $OS\"\n  \"Kernel:    $KERNEL\"\n  \"Shell:     $SHELL_NAME\"\n  \"Uptime:    $UPTIME\"\n  \"Fecha/Hora:$DATE\"\n)\n\nclear\necho \"\"\necho \"\"\n\n# neofetch\nfor i in \"${!ASCII[@]}\"; do\n  line=\"${ASCII[$i]}\"\n  info=\"${INFO[$i]}\"\n  printf \"${CYAN}%-35s${NC} ${YELLOW}%s${NC}\\n\" \"$line\" \"$info\"\ndone\n</code></pre>"},{"location":"software/programming/bash/bashBanners/#banner-2","title":"Banner 2","text":"<p> <pre><code>#!/bin/bash\n\n# COLORS THE SCRIPT.\nBlack='\\033[1;30m'\nRed='\\033[1;31m'\nGreen='\\033[1;32m'\nYellow='\\033[1;33m'\nBlue='\\033[1;34m'\nPurple='\\033[1;35m'\nCyan='\\033[1;36m'\nWhite='\\033[1;37m'\nNC='\\033[0m'\nblue='\\033[0;34m'\nwhite='\\033[0;37m'\nlred='\\033[0;31m'\n\n# USERNAME.\nuser=$(whoami)\n\n\n# BANNER PRESENT THE SCRIPT.\nbanner() {\n  echo -e \"${White} \u2554\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2557                                    \"\n  echo -e \"${White} |${Purple} \u2588\u2588\u2557    \u2588\u2588\u2557\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557${White} |${Red} [\uf1eb ]${White} ${lanip}           \"\n  echo -e \"${White} |${Purple} \u2588\u2588\u2551    \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2551${White} |${Red} [\udb80\udc3b ]${White} ${lanip6}          \"\n  echo -e \"${White} |${Purple} \u2588\u2588\u2551 \u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2557  \u2588\u2588\u2551${White} |${Red} [\uf007]${White} ${user}         \"\n  echo -e \"${White} |${Purple} \u2588\u2588\u2551\u2588\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u255d  \u2588\u2588\u2551${White} |${Red} [CTRL+C]${White} Exit           \"\n  echo -e \"${White} |${Purple} \u255a\u2588\u2588\u2588\u2554\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551\u2588\u2588\u2551     \u2588\u2588\u2551${White} |                           \"\n  echo -e \"${White} |${Purple}  \u255a\u2550\u2550\u255d\u255a\u2550\u2550\u255d \u255a\u2550\u255d\u255a\u2550\u255d     \u255a\u2550\u255d${White} |                           \"\n  echo -e \"${White} \u2516\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2519                                    \"\n}\n</code></pre></p>"},{"location":"software/programming/bash/bashSyntax/","title":"Basic Bash Scripting","text":"<p>Here\u2019s a quick guide to some fundamental Bash scripting concepts. Whether you're new to scripting or need a refresher, these examples will help you get started.</p>"},{"location":"software/programming/bash/bashSyntax/#variables-and-arithmetic","title":"Variables and Arithmetic","text":"<pre><code># Declaring variables\nvariable1=\"hola\"\nvariable2=123\nvariable3=\"$((2+2))\"  # Arithmetic expansion\nvariable4=$(($RANDOM % 10))  # Random number between 0 and 9\n\ndeclare -i numero=123  # Integer variable\ndeclare -a array=(1 2 3 4 5 6)  # Array\ndeclare -r str=\"read only\"  # Read-only variable\nsuma='expr $variable2 +1'  # String representation of arithmetic\n\n# Printing values\necho \"Content: $variable1\"\necho \"Lowercase: ${variable1,,}\"  # Convert to lowercase\necho \"Uppercase: ${variable1^^}\"  # Convert to uppercase\necho \"Sum: $((3+3))\"\necho \"Variable: $variable2\"\n\n# User input and arguments\nread -p \"Enter text: \" hola  # Prompt and save input\necho \"First argument: $1\"\necho \"Second argument: $2\"\necho \"All arguments: $@\"\necho \"Number of arguments: $#\"\n\n# Here document for multi-line output\ncat &lt;&lt; EOF\nThis is a multi-line\noutput example.\nEOF\n</code></pre>"},{"location":"software/programming/bash/bashSyntax/#conditions","title":"Conditions","text":"<pre><code>if [ value ]; then\n    coding\nelif [ value ]; then\n    coding\nfi\n</code></pre> <pre><code>case value in\n    help) coding ;;\n    show) coding ;;\nesac\n</code></pre> <pre><code>array=( 1 2 3 4 5 6 )\narray[6]=7\n\necho $(array[@])\necho $(array[1])\necho $(array[*])\necho $(! array[@])  # indice of elements\necho $(# array[@])  # amount of elements\n&amp; # usage at end of the la execution of an processs for sent task in paralleled\n</code></pre> <pre><code>for item in {content}; do coding done\n\nfor (( i=0; i &lt; 100; i+=1))\ndo\n    coding\ndone\n\nfor i in $(seq 1 10)\ndo\n echo \"$i\"\ndone\n\nfor element in $(array[@])\ndo\n    echo $element\ndone\n</code></pre> <pre><code>while [ $variable - condition ]\ndo\n    coding\n    coding\n    coding\ndone\n</code></pre>"},{"location":"software/programming/bash/bashSyntax/#functions","title":"functions","text":"<pre><code>function name(){\n    variables\n    conditions\n}\n\nname\n</code></pre>"},{"location":"software/programming/python/pythonFiles/","title":"python Files","text":""},{"location":"software/programming/python/pythonFiles/#write-and-read-files","title":"Write and Read files","text":"<pre><code>with open(\"example.txt\", \"r\" \"w\" \"a\") as f: # for file reading\n  content = f.read()\n  print(content)\n\nwith open(\"example.txt\", \"r\") as f: # for more efficient file reading\n  for line in f:\n  print(line.strip())\n\nwith open(\"example.txt\", \"rb\") as f: # for more efficient file reading in binary format\n  for line in f:\n  print(line.strip().decode())\n\n# &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n\nmy_list = [\"text\\n\", \"text\\n\", \"text\\n\" , \"text\\n\"]\n\nwith open(\"example.txt\", \"w\") as f:\n  f.writelines(my_list)\n# &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n\ntry:\n  with open(\"/Pictures/imagen.png\", \"rb\") as f_in , open(\"imagenCopy.png\", \"wb\") as f_out:\n    file_content = f_in\n    f_out.write(file_content)\nexcept FileNotFoundError:\n  print(\"file not found\")\n</code></pre>"},{"location":"software/programming/python/pythonModules/","title":"python Modules","text":""},{"location":"software/programming/python/pythonModules/#basic-uses","title":"Basic Uses","text":"<pre><code># pypi community https://pypi.org/\n# pip3 install hashlib\n# pip3 uninstall hashlib\n# pip3 cache purge\n\nimport math\nimport hashlib as hash\nfrom math import *\n\nprint(dir(math))\nprint(hashlib.file)\n</code></pre>"},{"location":"software/programming/python/pythonModules/#modules","title":"Modules","text":"<ul> <li> <p>cfonts <pre><code>import cfonts\nbanner = cfonts.render(\"Welcome\", colors=[\"red\", \"yellow\"], align=\"left\", font=\"chrome\", space=False, )\n</code></pre></p> </li> <li> <p>datetime <pre><code>today= datetime.datetime.now()\ndate = datetime.date(2002,02,02)\nhour = datetime.time(12,12,12)\n</code></pre></p> </li> <li> <p>re <pre><code>text = \"the cat in the house\"\nmatches = re.findall(\"cat\",text)\nmatches = re.findall(\"\\d{2}\\/\",text)\npatron = r'http://([\\w]+\\.onion)'\npatron = r'href=\"([\\w./\\-:]+)\"'\n</code></pre></p> </li> <li> <p>os <pre><code>os.path.exists(\"file.com\")\nos.mkdir(\"my_directory\")\nos.makedirs(\"dir1/dir2\")\nos.listdir()\nos.remove(\"file.txt\")\nos.rmdir(\"directory\")\nos.rename(\"Name\",\"newName\")\n</code></pre></p> </li> <li> <p>argparse <pre><code>def get_arguments():\n    parser = argparse.ArgumentParser(Description=\"description\")\n    parser.add_argument(\"-n\", \"--name\", dest=\"name\", help=\"name to continue\")\n    options = parser.parse_args()\n\n    if not options.name:\n        print(\"please enter the name\")\n        parser.print_help()\n\n    return options.name\n</code></pre></p> </li> </ul>"},{"location":"software/programming/python/pythonOOP/","title":"python OOP","text":""},{"location":"software/programming/python/pythonOOP/#class","title":"class","text":"<pre><code>class People:\n  def init(self, name,age):                            # init(p1,name,age)\n    self.name = name                                   # p1.name = name\n    self.age = age                                     # p.age = age\n\n  def greeting(self):                                         # greeting(p1)\n    return f\"hello, I am {self.name} and have {self.age}\"\n\np1 = People (\"frank\", 28)\nprint(p1.greeting())\n</code></pre>"},{"location":"software/programming/python/pythonOOP/#class-with-decorated","title":"class with decorated","text":"<pre><code>class Rectangle:\n  place = \"here\"\n  _schoolName = 'XYZ School' # protected class attribute\n  schoolName = 'XYZ School' # private class attribute\n\n  def __init(self, width, height ):\n    self.width = width\n    self.height = height\n  @property                   # save as property\n  def area(self):\n    return self.width  * self.height\n  def __str__(self):\n    return f\"rectangle: width:{self.width} , height: {self.height}\"\n\n  def eq(self, other):\n    return self.width  == otro.width and self.height  == otro.height\n\n  @staticmethod               # method outside the object\n  def amount(value):\n    return f\" the amount is: {value}\"\n  @classmenthod               # method that uses variables from the class itself used for inheritance\n  def place (cls,place ):\n    return f\"the place is: {cls.place}\"\n\nrect1 = Rectangle(20,80)\nrect2 = Rectangle(20,80)\n\nprint(rect1.area)                            # def area\nprint(rect1)                                 # def str or repr\nprint(f\"They are equal? -&gt;{rect1 == rect2}\") # def eq\nprint(Rectangle.place)                       # def place\n</code></pre>"},{"location":"software/programming/python/pythonOOP/#inheritance-and-polymorphism","title":"inheritance and polymorphism","text":"<pre><code>class Animal:\n  def init(self,name):\n    self.name = name\n\n  def speak(self):\n    raise NotImplementedError(\"this function not has implement\")\n  def name(self):\n    return self.name\n\nclass Dog(Animal):\n  def speak(self):\n    super().name(self);\n    return f\"GUAU GUAU\"\n\nclass Cat(Animal):\n  def speak(self):\n    return f\" Miau!!\"\n\ndef make_speak(animal):\n  print(f\"{animal.name} says {animal.speak()}\")\n\nc1 = Cat(\"kitty\")\nd1 = Dog(\"Perro\")\n\nprint(c1.speak())\nprint(d1.speak())\nmake_speak(c1)\nmake_speak(d1)\n</code></pre>"},{"location":"software/programming/python/pythonOOP/#decorators","title":"decorators","text":"<pre><code>def mi_decorator(funct):\n  def envoltura():\n    print (f\"Saludo en la envoltura antes de llamar a la funcion\")\n    funct()\n    print(f\"Saludo en la envoltura despues de llamra a la funcion\")\n  return envoltura\n\n@mi_decorador\ndef saludo():\n  print(\"saludo desde dentro de la funcion \")\n\nsaludo()\n</code></pre>"},{"location":"software/programming/python/pythonOOP/#get-and-set","title":"Get and Set","text":"<pre><code>class Persona:\n  def init(self,nombre,edad):\n    self._nombre = nombre\n    self._edad = edad\n\n  @property\n  def edad(self): #------------ get\n    return self._edad\n\n  @edad.setter\n  def edad(self,valor): #-----------set\n    if valor &gt; 0 :\n      self._edad = valor\n    else:\n      raise ValueError(\"la edad no puede ser menor que cero\")\n\nmanolo = Persona(\"Manolo\",23)\nprint(manolo.edad)\n</code></pre>"},{"location":"software/programming/python/pythonStrings/","title":"python Strings","text":""},{"location":"software/programming/python/pythonStrings/#string-formatting","title":"String Formatting","text":"<pre><code>name=\"string formating\"\nprint(\"string %s %s %d \" % (name,name, age) )\nprint(\"string {}\".format(name))\nprint(f\"string {name}\")\nprint(f\"string {name}\")\nprint(f\"{text:*&gt;10}\")                       # ******text\nprint(f\"{text:*^10}\")                       # ***text***\nprint(r\"na/////z{}(}{(!{!}##!@--()])))})\")  # raw print\n</code></pre>"},{"location":"software/programming/python/pythonStrings/#string-manipulation","title":"String Manipulation","text":"<pre><code>name=\"string formating\"\n\nname.strip().upper().lower()\nname.replace('e','o').split(' ').find('str').index('str').count('str')\nname.startsWith('H').endsWith('H').isalpha().isdigit().isspace().islower()\n\nprint(' '.join(my_list))\n\ntable_change=str.maketrans('sf','SF')\nnew_name=name.translate(table_change)\n</code></pre> Docs <p>https://docs.python.org/3/library/string.html</p>"},{"location":"software/programming/python/pythonSyntax/","title":"python Syntax","text":""},{"location":"software/programming/python/pythonSyntax/#python-shebang","title":"python shebang","text":"<pre><code>#!/usr/bin/env python3\n#!/usr/bin/python3\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#agreements","title":"agreements","text":"<pre><code>lower_case_with_underscore     # variables and functions\nUPPER_CASE_WITH_UNDERSCORE     # constants\nCamelCase                      # class\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#type-casting","title":"type casting","text":"<pre><code>int(2.0), str(2), float(2.2)\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#loops","title":"loops","text":"<pre><code>for i in range(7,0,-1):     #7,6,5......\n    pass\n    break\n    continue\nelse:\n    pass\n\nfor item in my_list:\n    pass\n\nwhile i &lt; 3:\n    pass\n\nfor index,item in enumerate(my_list):\n    print(f\"index={index} item={item}\")\n\nfor item in zip([1, 2, 3], ['sugar', 'spice', 'everything nice']):\n    print(item)   # set(1,'sugar')\n\n\nnew_list=list(map(sum, zip(my_list,my_list)))\nsquares=[i**2 for i in my_list]\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#conditions","title":"Conditions","text":"<pre><code>if e == e:\n    pass\nelif e==a:\n    pass\nelse:\n    pass\n\nmsg= \"test1\" if e==a else \"test2\"\n\nif \"item\" in my_list:\n    pass\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#functions","title":"Functions","text":"<pre><code>def action(a,b):\n    pass\n    return\n\naction(a,b)\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#anonymous-lambda-functions","title":"anonymous lambda functions","text":"<pre><code>sqrs  = lambda x: x**2\nprint(sqrs(4))\n\nfrom functools import reduce\n\nn = [1,2,3,4,5]\nsquares  = list(map(lambda x:x**2,n))\neven = list(filter(lambda x : x%2==0,n))\nproduct = reduce(lambda x,y: x*y , n)\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#exceptions","title":"Exceptions","text":"<pre><code>try:\n  num = 4/2\nexcept ZeroDivisionError:\n    pass\nexcept TypeError:\n    pass\nelse:\n    pass\nfinally:\n    pass\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#lists","title":"lists","text":"<pre><code>my_list = [\"item\",12,true]\nmy_list.append(\"item\").extend([\"item\",\"item\"]).sort().insert(5,\"item\")\nmy_list += [\"item\",\"item\"], sorted(my_list), my_list.index(\"item\").count(\"item\").reverse()\ndel my_list[3], my_list.pop(3).remove(\"item\").clear()\nlen(my_list), max(my_list), min(my_list), sum(my_list),\nmy_list[1],[:3],[5:],[5:1],[:-2],[::-1]\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#tuples","title":"tuples","text":"<pre><code>my_tupla = (1,2,3,4,5)\na,b,c,d,e = my_tupla\n\nmy_tupla[::3],[1]\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#sets","title":"sets","text":"<pre><code># unique elements\n# messy elements\n# quick search\n\nmy_set = {1,2,3,4,5,6,7,8,9}\nset2 = {\"hello\",9,3}\nprint(\"item\" in set2) # false\n\nmy_set.add(2).update({11,12,13}).remove(2).discard(1000).issubset(set2)\nend_set = my_set.intersection(set2).union(set2).difference(set2)\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#dictionary","title":"dictionary","text":"<pre><code>my_dictionary = {\"name\":\"name1\", \"age\":12, \"place\":\"city\"}\nmy_dictionary[\"name\"] = \"name2\"\nmy_dictionary[\"profession\"] = \"teacher\"\ndel my_dictionary[\"place\"]\n\nprint(my_dictionary[\"nombre\"])\nprint(my_dictionary.keys().values().get(\"key\",\"not found\")).update(other_dictionary)\n\nfor key,value in dic.items():\n    print(f\"key={key} value ={value}\")\n</code></pre>"},{"location":"software/programming/python/pythonSyntax/#args-and-kwargs","title":"args and kwargs","text":"<pre><code>def suma(*args):\n  return sum(args)\nprint(suma(1,2,3,4,5))\n\n\ndef Presentacion(**kwargs):\n  for clave,valor in kwargs.items():\n    print(f\"{clave}: {valor}\")\n\nPresentacion(nombre=\"Antony\", edad= 23, ciudad = \"Peru\")\n</code></pre> Docs <p>https://docs.python.org/3/library/functions.html</p>"},{"location":"software/programming/python/pythonTemplates/","title":"python Templates","text":""},{"location":"software/programming/python/pythonTemplates/#script-template","title":"Script Template","text":"<pre><code>#!/usr/bin/env python3\n\n# &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; packages\nimport socket\nfrom termcolor import colored\nimport argparse\nimport sys\n\n#&gt;&gt;&gt;&gt;&gt;&gt; global variables\n\n#&gt;&gt;&gt;&gt; ctrl+C break\ndef def_handler(sig,frame):\n    print(f\"saliendo del programa\")\n    sys.exit(1)\nsignal.signal(signal.SIGINT,def_handler)\n\n\n# &gt;&gt;&gt;&gt;&gt;&gt; get arguments\nimport argparse\nimport sys\n\ndef get_arguments():\n    parser = argparse.ArgumentParser(description='Fast TCP port scanner')\n    parser.add_argument(\"-t\", \"--target\", dest=\"target\", required=True, help=\"Victim target to scan (e.g., -t 10.10.10.10)\")\n    options = parser.parse_args()\n    if not options.target:\n        parser.print_help()\n        sys.exit(1)\n    return options.target\n\ntarget_ip = get_arguments()\nprint(\"Target IP:\", target_ip)\n\n#&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;Class\n\n\n#&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Functions\ndef port_scanner(host,port,s):\n    try:\n        s.connect((host,port))\n        print(colored(f\"el puerto {port} esta abierto\" , 'green'))\n        s.close()\n    except (socket.timeout, ConnectionRefusedError):\n        print(colored(f\"el puerto {port} esta cerrado\", 'red'))\n        s.close()\n\n#&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Principal\ndef main():\n    IP = get_arguments()\n    for port in range(1000):\n        s = create_socket()\n        port_scanner(IP,port,s)\n\n# &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; start programa\nif __name__ == '__main__':\n    main()\n</code></pre>"},{"location":"software/tools/git/","title":"Git","text":"<p>Git is a free and open-source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Whether you're a solo developer or part of a team, Git helps you track changes, collaborate seamlessly, and manage your codebase effectively.</p>"},{"location":"software/tools/git/#getting-started","title":"Getting Started","text":""},{"location":"software/tools/git/#basic-configuration","title":"Basic Configuration","text":"<p>Before diving into Git, configure your identity: <pre><code>git config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\ngit config --global init.defaultBranch main\n</code></pre></p>"},{"location":"software/tools/git/#aliases-for-efficiency","title":"Aliases for Efficiency","text":"<p>Create shortcuts for frequently used commands: <pre><code>git config --global alias.graph \"log --graph --decorate --all --oneline\"\ngit graph  # Use the alias\n</code></pre></p>"},{"location":"software/tools/git/#ssh-setup","title":"SSH Setup","text":"<p>For secure connections to GitHub or other platforms: 1. Generate an SSH key:    <pre><code>ssh-keygen -t ed25519 -C \"your.email@example.com\"\n</code></pre> 2. Add the key to your GitHub account (Settings &gt; SSH and GPG Keys). 3. Test the connection:    <pre><code>ssh -T git@github.com\n</code></pre></p>"},{"location":"software/tools/git/#branching","title":"Branching","text":"<p>Branches allow you to work on features or fixes without affecting the main codebase.</p>"},{"location":"software/tools/git/#creating-and-managing-branches","title":"Creating and Managing Branches","text":"<pre><code>git branch -m main          # Rename 'master' to 'main'\ngit init                   # Initialize a repository\n\ngit branch login           # Create a new branch\ngit switch login           # Switch to the branch\ngit branch -d login        # Delete the branch\n</code></pre>"},{"location":"software/tools/git/#merging","title":"Merging","text":"<p>Combine changes from one branch into another: <pre><code>git merge main             # Merge 'main' into the current branch\ngit merge login            # Merge 'login' into 'main'\n</code></pre></p>"},{"location":"software/tools/git/#tags","title":"Tags","text":"<p>Tags mark specific points in history (e.g., releases): <pre><code>git tag                    # List all tags\ngit tag v1.0               # Create a tag\ngit checkout tags/v1.0     # Checkout a tag\n</code></pre></p>"},{"location":"software/tools/git/#commits","title":"Commits","text":"<p>Commits save your changes to the repository.</p>"},{"location":"software/tools/git/#staging-and-committing","title":"Staging and Committing","text":"<pre><code>git add file.txt           # Stage a file\ngit add .                  # Stage all changes\ngit commit -m \"Message\"    # Commit changes\n</code></pre>"},{"location":"software/tools/git/#undoing-changes","title":"Undoing Changes","text":"<pre><code>git reflog                 # View commit history\ngit reset --hard COMMIT_ID # Revert to a specific commit\n\ngit stash                  # Save changes temporarily\ngit stash list             # List stashes\ngit stash pop              # Restore stashed changes\ngit stash drop             # Delete a stash\n</code></pre>"},{"location":"software/tools/git/#resetting-files","title":"Resetting Files","text":"<pre><code>git checkout file.txt      # Discard changes in a file\ngit reset                  # Unstage changes\ngit checkout HEAD          # Revert to the last commit\n</code></pre>"},{"location":"software/tools/git/#history-and-diffs","title":"History and Diffs","text":"<p>Track changes and review history: <pre><code>git status                 # Show current status\ngit diff                   # View unstaged changes\ngit log                    # Show commit history\ngit log --graph            # Visualize history as a tree\ngit log --oneline          # Compact history view\n</code></pre></p>"},{"location":"software/tools/git/#remote-repositories","title":"Remote Repositories","text":"<p>Collaborate by syncing with remote repositories (e.g., GitHub).</p>"},{"location":"software/tools/git/#cloning-and-pushing","title":"Cloning and Pushing","text":"<pre><code>git remote add origin git@github.com:username/repo.git\ngit clone REPO_URL         # Clone a repository\ngit push -u origin main    # Push to 'main' branch\ngit push                   # Push changes\n</code></pre>"},{"location":"software/tools/git/#fetching-and-pulling","title":"Fetching and Pulling","text":"<pre><code>git fetch                  # Download changes without merging\ngit config pull.rebase false  # Configure merge strategy\ngit pull origin main       # Fetch and merge changes\n</code></pre>"},{"location":"software/tools/git/#partial-checkout","title":"Partial Checkout","text":"<p>Need just a folder from a large repository? <pre><code>svn checkout https://github.com/user/repo/trunk/path/to/folder\n</code></pre></p>"},{"location":"software/tools/git/#conclusion","title":"Conclusion","text":"<p>Git is a powerful tool for version control, and mastering its basics can significantly improve your workflow. Experiment with these commands, and soon you'll be navigating Git like a pro!</p>"},{"location":"software/tools/hotkeysConfig/","title":"Custom Hotkeys","text":""},{"location":"software/tools/hotkeysConfig/#essentials","title":"\ud83e\udde9 Essentials","text":"Key Function Keywords Super system, launcher, start Esc cancel, close Ctrl control, combine, shortcut Shift modifier, extend, transform Alt alternate, swap, return Tab switch tab, focus, next"},{"location":"software/tools/hotkeysConfig/#symbols-punctuation-mappings","title":"Symbols &amp; Punctuation Mappings","text":"Symbol Function Keywords * all, wildcard, multiply ! alert, priority, force # tag, number, header @ assign, mention, mark $ value, currency &amp; and, connect + add, increase, combine - subtract, decrease ~ home, user root % percent, modulo, reference = equal, assign ` jump to mark, temp command | pipe, separate logic \\ escape, special syntax ^ start of line, control / find, path, divide ? help, unknown, search _ space, placeholder : command mode, options ; command separator , setting, soft break . current position &lt; &gt; left, right, shift flow ' \" quotes, string, marks [ ] embed, container menu, select, options"},{"location":"software/tools/hotkeysConfig/#letter-key-semantics","title":"Letter Key Semantics","text":"Key Function Keywords A all, select all B bold, highlight C copy, cancel, interrupt D delete, remove E explore, open path F find, search G go to, navigate H help, support I insert, mode change J jump, fast scroll K keynote, kill L clear, clean M mark, favorite N next, new O open, select file P paste, previous Q quit, exit, kill process R replace, reload S save, sync T tab, new tab U undo, restore V visual, select mode W window, withdraw X cut, close Y yank, copy line Z stop, break, suspend"},{"location":"software/tools/hotkeysConfig/#function-keys","title":"\ud83c\udfb9 Function Keys","text":"Key Assigned Action Description F1 Decrease Screen Brightness \ud83d\udd05 Lowers the screen brightness. F2 Increase Screen Brightness \ud83d\udd06 Raises the screen brightness. F3 Search Again Repeats last search (common in IDEs and browsers). F4 Close Active Tab / Window Closes the current window or tab. F5 Refresh / Reload Reloads current page or rebuilds project. F6 Move to Address Bar / Editor Switch Jump to browser address bar or switch focus in IDE. F7 Spell Check / Compilation Toggle spell checker or initiate code compile. F8 Next Error / Breakpoint Toggle Move to next compiler error or toggle breakpoint in IDE. F9 Build / Run Code Compile and run your project. F10 Mute / Unmute \ud83d\udd07 Toggles system sound mute. F11 Decrease Volume \ud83d\udd09 Lowers the system volume. F12 Increase Volume \ud83d\udd0a Raises the system volume. F13 Toggle Fullscreen Enter or exit fullscreen mode. F14 Lock Screen Instantly lock your computer. F15 Screenshot Take a screenshot of the entire screen. F16 Launch Email Client Open default mail client or Gmail tab. F17 Toggle Dark Mode Toggle system or app-level dark mode. F18 Mute Microphone Toggle microphone mute (useful for calls). F19 Play / Pause Media Toggle play/pause of media player. F20 Next Track Skip to the next audio/video track. F21 Previous Track Go to the previous track. F22 Toggle Wi-Fi / Network Settings Open network settings or toggle Wi-Fi adapter. F23 Clipboard Manager / History Show clipboard history (useful for copy-paste workflows). F24 Open Task Manager / System Monitor Launch Task Manager or system resource monitor."},{"location":"software/tools/obsidian/","title":"Obsidian: The Note-Taking App that will blow your mind (in a good way)","text":"<p>If you are one of those who think you have a thousand ideas a day, take notes everywhere and then you can't find anything or you don't write down because you find it tedious ... Obsidian can become your new best friend.</p> <p>What is Obsidian and why is everyone talking about it?</p> <p>Obsidian is a note-taking app, yes, but not just any note-taking app. It's like Notion and a paper diary having a super smart child that also helps you think better. What makes Obsidian special is that it allows you to connect your notes together, creating a kind of digital mind web that looks super cool,</p> <p>so check it out!!!!!</p> <p></p> <p>that's the only reason I chose it.</p> <p>But also instead of having loose notes that get lost in oblivion, you can link them together, see how they relate and build your own \u201cexternal brain\u201d.</p> <p>What makes it so great? Magical links between notes \ud83e\uddf2 You can link one note to another like Wikipedia pages. Did you mention \u201cProductivity\u201d in a note about \u201cStudy\u201d? Boom! You already have a link that takes you straight to that idea. Automatic Mind Map \ud83e\udde0 There's a feature that shows you all your notes as a graph.It's like seeing your mind from the outside.Literally.</p> <p>It's all yours \ud83d\udcbe Your notes are saved on your computer or cell phone as .md files. No one else touches them, nor do you need internet to use them.</p> <p>Plugins for everything \ud83d\udee0\ufe0f Do you like to keep a diary, do you need a calendar, do you want to turn notes into tasks? There's a plugin for that.</p> <p>and much more, but if you want to know just type Obsidian in google, I write this as a relax, not as a research. and save my settings.</p> <p>now my settings</p>"},{"location":"software/tools/obsidian/#hotkeys","title":"Hotkeys","text":"<p>This configs of take consideration my hotkeys configs <pre><code>create note -&gt; ctrl + n\ncreate folder -&gt; ctrl + shift + n\ncreate note in this windows -&gt; ctrl + alt + n\ndelete current file -&gt; shift backspace\nopen configs -&gt; ctrl + ,\nopen file explorer -&gt; ctrl + e\n</code></pre></p>"},{"location":"software/tools/obsidian/#appearance","title":"appearance","text":"<pre><code>this the appearance configs\n</code></pre>"},{"location":"software/tools/vim/","title":"Vim","text":"<p>Neovim stands out as one of the best code editors available today, thanks to its powerful hotkeys, extensive customization options, and a plethora of features. These qualities have made it my go-to editor for all my coding needs.</p>"},{"location":"software/tools/vim/#configurations","title":"Configurations","text":""},{"location":"software/tools/vim/#install","title":"Install","text":"<p>Neovim <pre><code>curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz\nsudo rm -rf /opt/nvim\nsudo tar -C /opt -xzf nvim-linux-x86_64.tar.gz\n\nexport PATH=\"$PATH:/opt/nvim-linux-x86_64/bin\"\n</code></pre></p> <p>Install all dependencies from \ud83d\udee0\ufe0f Installation | LazyVim and install LazyVim</p> <p>For those looking for a user-friendly setup, I highly recommend LazyVim. Designed with intuitiveness in mind, it caters to both beginners and seasoned users, ensuring a smooth and efficient workflow.</p>"},{"location":"software/tools/vim/#explore-my-configurations","title":"Explore My Configurations","text":"<p>Feel free to check out my personal configurations on GitHub for inspiration or to get started quickly.</p> <p></p>"},{"location":"software/tools/windowsEnviroment/","title":"Why?","text":"<p>Customizing Your Window Environment \u2013 Why It Matters</p> <p>Having a fully customized window environment is one of the most important things for us \u2014 those who love to tweak and tailor every detail. This is the space where you can show me your own window manager setup; maybe I\u2019ll pick up a few ideas from it too.</p> <p>My setup uses bspwm, kitty, sxhkd, among others. Why do I use these instead of the countless other options out there? Simply put: they're the best for me. I don\u2019t need to justify it \u2014 it just works exactly how I like</p> <p>Installing This Window Environment (Step-by-Step)</p> <p>Here's how you can install and configure this environment, step by step:</p> <ul> <li> <p>Install all environment dependencies. <pre><code>sudo apt install -y build-essential git vim libxcb-util0-dev libxcb-ewmh-dev libxcb-randr0-dev libxcb-icccm4-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libasound2-dev libxcb-xtest0-dev libxcb-shape0-dev\n</code></pre></p> </li> <li> <p>Install bspwm. <pre><code>sudo apt install bspwm sxhkd\n</code></pre></p> </li> <li> <p>Install kitty. <pre><code>curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin\n</code></pre></p> </li> <li> <p>Create the bspwm/bspwmrc and sxhkd/sxhkdrc files. It's very important to give execution permission.</p> </li> </ul> <p>bspwmrc <pre><code>#! /bin/sh\n\n# \u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2557    \u2588\u2588\u2557\u2588\u2588\u2588\u2557   \u2588\u2588\u2588\u2557\n# \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u2588\u2588\u2551    \u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2557 \u2588\u2588\u2588\u2588\u2551\n# \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551 \u2588\u2557 \u2588\u2588\u2551\u2588\u2588\u2554\u2588\u2588\u2588\u2588\u2554\u2588\u2588\u2551\n# \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2550\u2550\u255d \u2588\u2588\u2551\u2588\u2588\u2588\u2557\u2588\u2588\u2551\u2588\u2588\u2551\u255a\u2588\u2588\u2554\u255d\u2588\u2588\u2551\n# \u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2551     \u255a\u2588\u2588\u2588\u2554\u2588\u2588\u2588\u2554\u255d\u2588\u2588\u2551 \u255a\u2550\u255d \u2588\u2588\u2551\n# \u255a\u2550\u2550\u2550\u2550\u2550\u255d \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d      \u255a\u2550\u2550\u255d\u255a\u2550\u2550\u255d \u255a\u2550\u255d     \u255a\u2550\u255d\n#\n\n# xprop | grep WM_CLASS\n\npgrep -x sxhkd &gt; /dev/null || sxhkd &amp;\n\n#bspc monitor -d I II III IV V VI VII VIII IX X\nbspc monitor -d I II III IV V\n\nxsetroot -cursor_name left_ptr &amp;\n\n# styles configurations\nbspc config border_width         1\nbspc config focused_border_color \\#f60726\nbspc config normal_border_color \\#838383\nbspc config window_gap          5\n\nbspc config split_ratio          0.52\nbspc config borderless_monocle   true\nbspc config gapless_monocle      true\n\nbspc config focus_follows_pointer true\nbspc config pointer_follows_focus true\nbspc config gapless_monocle true\nbspc config paddingless_monocle true\n\n\n# configuration of how an application is opened\n\n#bspc rule -a 'Gnome-terminal' state=floating rectangle=1000x600+150+150 center=true\n#bspc rule -a 'Google-chrome' desktop='I'\n#bspc rule -a 'firefox' desktop='I'\nbspc rule -a 'SimpleScreenRecorder' state=floating follow=on\nbspc rule -a 'BleachBit' state=floating follow=on\nbspc rule -a 'stacer' state=floating follow=on\nbspc rule -a 'org.gnome.Nautilus' state=floating follow=on\nbspc rule -a 'gnome-calculator' state=floating follow=on\nbspc rule -a 'Nitrogen' state=floating follow=on\nbspc rule -a 'Synaptic' state=floating follow=on\n\n\n\n# Auto-Start applications\n\n#picom &amp;\n#~/.config/polybar/launch.sh &amp;\n#~/scripts/wall-scripts/camila_wal.sh &amp;\n</code></pre></p> <p>sxhkdrc <pre><code># \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557\u2588\u2588\u2557  \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2557\n# \u2588\u2588\u2554\u2550\u2550\u2550\u2550\u255d\u255a\u2588\u2588\u2557\u2588\u2588\u2554\u255d\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551 \u2588\u2588\u2554\u255d\u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2557\n# \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2557 \u255a\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2588\u2588\u2588\u2554\u255d \u2588\u2588\u2551  \u2588\u2588\u2551\n# \u255a\u2550\u2550\u2550\u2550\u2588\u2588\u2551 \u2588\u2588\u2554\u2588\u2588\u2557 \u2588\u2588\u2554\u2550\u2550\u2588\u2588\u2551\u2588\u2588\u2554\u2550\u2588\u2588\u2557 \u2588\u2588\u2551  \u2588\u2588\u2551\n# \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2551\u2588\u2588\u2554\u255d \u2588\u2588\u2557\u2588\u2588\u2551  \u2588\u2588\u2551\u2588\u2588\u2551  \u2588\u2588\u2557\u2588\u2588\u2588\u2588\u2588\u2588\u2554\u255d\n# \u255a\u2550\u2550\u2550\u2550\u2550\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u255d  \u255a\u2550\u255d\u255a\u2550\u2550\u2550\u2550\u2550\u255d\n#\n\n#\n# wm independent hotkeys\n#\n\n# Terminal emulator\nsuper + Return\n  /home/redalit/.local/kitty.app/bin/kitty\n\n# Program launcher\nsuper + d\n#  bash ~/.config/rofi/launchers/type-1/launcher.sh\n#  bash ~/.config/polybar/cuts/scripts/launcher.sh\n\n# Make sxhkd reload its configuration files:\nsuper + Escape\n  pkill -USR1 -x sxhkd\n\n#\n# Bspwm hotkeys\n#\n\n# quit/restart bspwm\nsuper + alt + {q,r}\n  bspc {quit,wm -r}\n\n# close and kill\nsuper + {_,shift + }q\n  bspc node -{c,k}\n\n# alternate between the tiled and monocle layout\nsuper + m\n  bspc desktop -l next\n\n# send the newest marked node to the newest preselected node\nsuper + y\n  bspc node newest.marked.local -n newest.!automatic.local\n\n# swap the current node and the biggest window\nsuper + g\n  bspc node -s biggest.window\n\n#\n# state/flags\n#\n\n# set the window state\nsuper + {t,shift + t,s,f}\n  bspc node -t {tiled,pseudo_tiled,floating,fullscreen}\n\n# set the node flags\nsuper + ctrl + {m,x,y,z}\n  bspc node -g {marked,locked,sticky,private}\n\n#\n# focus/swap\n#\n\n# focus the node in the given direction\nsuper + {_,shift + }{Left,Down,Up,Right}\n  bspc node -{f,s} {west,south,north,east}\n\n# focus the node for the given path jump\nsuper + {p,b,comma,period}\n  bspc node -f @{parent,brother,first,second}\n\n# focus the next/previous window in the current desktop\nsuper + {_,shift + }c\n  bspc node -f {next,prev}.local.!hidden.window\n\n# focus the next/previous desktop in the current monitor\nsuper + bracket{left,right}\n  bspc desktop -f {prev,next}.local\n\n# focus the last node/desktop\nsuper + {grave,Tab}\n  bspc {node,desktop} -f last\n\n# focus the older or newer node in the focus history\nsuper + {o,i}\n  bspc wm -h off; \\\n  bspc node {older,newer} -f; \\\n  bspc wm -h on\n\n# focus or send to the given desktop\nsuper + {_,alt + }{0,2,4,6,8}\n  bspc {desktop -f,node -d} '^{1,2,3,4,5}'\n\n#\n# preselect\n#\n\n# preselect the direction\nsuper + ctrl + {Left,Down,Up,Right}\n  bspc node -p {west,south,north,east}\n\n# preselect the ratio\nsuper + ctrl + {1-9}\n  bspc node -o 0.{1-9}\n\n# cancel the preselection for the focused node\nsuper + alt + 0\n  bspc node -p cancel\n\n# cancel the preselection for the focused desktop\nsuper + ctrl + alt + 0\n  bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel\n\n#\n# move/resize\n#\n\n# expand a window by moving one of its side outward\n#super + alt + {Left,Down,Up,Right}\n#  bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}\n\n# contract a window by moving one of its side inward\n#super + alt + shift + {Left,Down,Up,Right}\n#  bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}\n\n# move a floating window\nsuper + {Left,Down,Up,Right}\n  bspc node -v {-20 0,0 20,0 -20,20 0}\n\n# custom resize\nsuper + alt + {Left,Down,Up,Right}\n  /home/redalit/.config/bspwm/bspwm_resize {west,south,north,east}\n\n\n\n# Screenshot flameshot\n#super + alt + 1\n#  flameshot gui\n\n# Screenshot flameshot full\n#super + alt + 2\n#  flameshot full\n\n# betterlockscreen\n#super + x\n#  betterlockscreen -l dim\n</code></pre></p> <p>bspwm_resize <pre><code>#usr/bin/env dash\n\nif bspc query -N -n focused.floating &gt; /dev/null; then\n  step=20\nelse\n  step=100\nfi\n\ncase \"$1\" in\n  west) dir=right; falldir=left; x=\"-$step\"; y=0;;\n  east) dir=right; falldir=left; x=\"$step\"; y=0;;\n  north) dir=top; falldir=bottom; x=0; y=\"-$step\";;\n  south) dir=top; falldir=bottom; x=0; y=\"$step\";;\nesac\n\nbspc node -z \"$dir\" \"$x\" \"$y\" || bspc node -z \"$falldir\" \"$x\" \"$y\"\n</code></pre></p> <p>kitty.conf <pre><code>enable_audio_bell no\nshow_config_warnings no\n\ninclude color.ini\n\nfont_family      ComicMono\nfont_size 11.8\n\ndisable_ligatures never\n\nurl_color #61afef\n\nurl_style curly\n\nmap ctrl+left neighboring_window left\nmap ctrl+right neighboring_window right\nmap ctrl+up neighboring_window up\nmap ctrl+down neighboring_window down\n\nmap f1 copy_to_buffer a\nmap f2 paste_from_buffer a\nmap f3 copy_to_buffer b\nmap f4 paste_from_buffer b\n\ncursor_shape beam\ncursor_beam_thickness 1.8\n\nmouse_hide_wait 3.0\ndetect_urls yes\n\nrepaint_delay 25\ninput_delay 3\nsync_to_monitor yes\n\nmap ctrl+shift+z toggle_layout stack\ntab_bar_style powerline\n\ninactive_tab_background #e06c75\ninactive_tab_foreground #000000\nactive_tab_background #98c379\ntar_bar_margin_color black\n\nmap ctrl+shift+enter new_window_with_cwd\nmap ctrl+shift+t new_tab_with_cwd\n\nbackground_opacity 0.75\n\nshell bash\n</code></pre></p> <p>kitty colors ini <pre><code>#Colortheme: Camila\ncursor_shape Underline\ncursor_underline_thickness 1\nwindow_padding_width 20\n\n#selection_background #1f1f1f\n#selection_foreground #131313\nforeground   #e0d1d2\nbackground   #040406\ncursor       #e0d1d2\ncolor0       #040406\ncolor8       #9c9293\ncolor1       #676867\ncolor9       #676867\ncolor2       #9E2226\ncolor10      #9E2226\ncolor3       #D92A2E\ncolor11      #D92A2E\ncolor4       #B55154\ncolor12      #B55154\ncolor5       #E55257\ncolor13      #E55257\ncolor6       #B37F81\ncolor14      #B37F81\ncolor7       #e0d1d2\ncolor15      #e0d1d2\n</code></pre></p>"},{"location":"software/tools/zenBrowser/","title":"Zen Browser","text":"<p>Zen Browser is a super browser designed to enhance your browsing experience by minimizing distractions and promoting relaxation. With its minimalist interface and powerful features, Zen Browser helps you focus on what matters most.</p> <ul> <li>Minimalist Design: Clean and clutter-free interface.</li> <li>Focus Mode: Blocks distracting elements for uninterrupted browsing.</li> <li>Customizable Themes: Choose from soothing color palettes.</li> </ul>"},{"location":"software/tools/zenBrowser/#shortcuts","title":"Shortcuts","text":"Shortcuts Actions <code>Shift + Y</code> Copy URL page as markdown <code>Ctrl + T</code> Open a new tab <code>alt + W</code> Close the current tab"}]}